{"meta":{"title":"Tanjunze笔记","subtitle":null,"description":"tanjunze","author":"tanjunze","url":"https://tanjunze.github.io"},"pages":[{"title":"关于","date":"2018-10-26T13:59:02.000Z","updated":"2018-10-26T06:46:42.415Z","comments":true,"path":"about/index.html","permalink":"https://tanjunze.github.io/about/index.html","excerpt":"","text":"“不积跬步无以至千里，不积小流无以成江海” 关于我Android技术宅，计算机专业 专科生，喜欢折腾。技术栈: H5、Java/Android/Kotlin、Cordova、ReactNative、Weex、Flutter(最爱的框架)，Linux、SQl、TensorFlow、C++ 联系方式邮箱：tan_junze@qq.com Github：https://github.com/tanjunze"}],"posts":[{"title":"在Blog中添加背景图和动效","slug":"在Blog中添加背景图和动效","date":"2018-10-26T14:53:36.000Z","updated":"2018-10-26T07:29:00.498Z","comments":true,"path":"2018/10/26/在Blog中添加背景图和动效/","link":"","permalink":"https://tanjunze.github.io/2018/10/26/在Blog中添加背景图和动效/","excerpt":"记录一次在Blog中添加动态效果。 参考网址：网站动态背景（动态图）和静态背景（背景图片）的主题美化","text":"记录一次在Blog中添加动态效果。 参考网址：网站动态背景（动态图）和静态背景（背景图片）的主题美化 添加蜘蛛网动效需要在html页面的&lt;body&gt;&lt;/body&gt;标签中添加下面的js: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283&lt;script type=\"text/javascript\"&gt; ! function () &#123; function o(w, v, i) &#123; return w.getAttribute(v) || i &#125; function j(i) &#123; return document.getElementsByTagName(i) &#125; function l() &#123; var i = j(\"script\"), w = i.length, v = i[w - 1]; return &#123; l: w, z: o(v, \"zIndex\", -1), //设置动态图显示的层位，一般-1就行，不用改 o: o(v, \"opacity\", 0.5), //0.5显示的是线条的透明度，可以自行调整 c: o(v, \"color\", \"0,0,0\"), //设置线条的颜色，三个0,0,0分别代表RGB颜色数值，不知道的可以打开PS里的拾色器就可以看到RGB数值了 n: o(v, \"count\", 120), //设置线条显示的数量，有密集恐惧症的朋友可别把数值设置太大哦 &#125; &#125; function k() &#123; r = u.width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, n = u.height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight &#125; function b() &#123; e.clearRect(0, 0, r, n); var w = [f].concat(t); var x, v, A, B, z, y; t.forEach(function (i) &#123; i.x += i.xa, i.y += i.ya, i.xa *= i.x &gt; r || i.x &lt; 0 ? -1 : 1, i.ya *= i.y &gt; n || i.y &lt; 0 ? -1 : 1, e.fillRect(i.x - 0.5, i.y - 0.5, 1, 1); for (v = 0; v &lt; w.length; v++) &#123; x = w[v]; if (i !== x &amp;&amp; null !== x.x &amp;&amp; null !== x.y) &#123; B = i.x - x.x, z = i.y - x.y, y = B * B + z * z; y &lt; x.max &amp;&amp; (x === f &amp;&amp; y &gt;= x.max / 2 &amp;&amp; (i.x -= 0.03 * B, i.y -= 0.03 * z), A = (x.max - y) / x.max, e.beginPath(), e.lineWidth = A / 2, e.strokeStyle = \"rgba(\" + s.c + \",\" + (A + 0.2) + \")\", e.moveTo(i.x, i.y), e.lineTo(x.x, x.y), e.stroke()) &#125; &#125; w.splice(w.indexOf(i), 1) &#125;), m(b) &#125; var u = document.createElement(\"canvas\"), s = l(), c = \"c_n\" + s.l, e = u.getContext(\"2d\"), r, n, m = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (i) &#123; window.setTimeout(i, 1000 / 45) &#125;, a = Math.random, f = &#123; x: null, y: null, max: 20000 &#125;; u.id = c; u.style.cssText = \"position:fixed;top:0;left:0;z-index:\" + s.z + \";opacity:\" + s.o; j(\"body\")[0].appendChild(u); k(), window.onresize = k; window.onmousemove = function (i) &#123; i = i || window.event, f.x = i.clientX, f.y = i.clientY &#125;, window.onmouseout = function () &#123; f.x = null, f.y = null &#125;; for (var t = [], p = 0; s.n &gt; p; p++) &#123; var h = a() * r, g = a() * n, q = 2 * a() - 1, d = 2 * a() - 1; t.push(&#123; x: h, y: g, xa: q, ya: d, max: 6000 &#125;) &#125; setTimeout(function () &#123; b() &#125;, 100) &#125;();&lt;/script&gt; 添加背景图我的blog的样式有点差异，这记录一下。 在css样式文件中添加一下css:123456body&#123; width:100%; height:auto; background: url(背景图路径) no-repeat fixed; background-size: cover;&#125; 注意：背景图片最好是：1920x1080 背景图片素材网：Toptal 好了，通过以上2步操作就可以实现看的蜘蛛网效果 本blog使用hexo +material-x 搭建，body 标签文件在 &lt;hexo blog path&gt;\\themes\\material-x\\layout\\layout.ejsbody CSS文件在 &lt;hexo blog path&gt;\\themes\\material-x\\source\\less\\_base.less中添加","categories":[],"tags":[]},{"title":"Docker命令笔记","slug":"Docker命令笔记","date":"2018-06-05T10:15:12.000Z","updated":"2018-10-26T02:20:58.307Z","comments":true,"path":"2018/06/05/Docker命令笔记/","link":"","permalink":"https://tanjunze.github.io/2018/06/05/Docker命令笔记/","excerpt":"一、Docker 安装本示例采用sh脚本安装,其他方式参考Docker CE官网。","text":"一、Docker 安装本示例采用sh脚本安装,其他方式参考Docker CE官网。 0、root用户登陆 1、升级yum包： $ sudo yum update 2、（可选）卸载旧的Docker $ sudo yum erase docker docker-common docker-client docker-compose 4、执行 Docker 安装脚本 $ curl -fsSL https://get.docker.com/ | sh或$ wget -qO- https://get.docker.com/ | sh 5、测试Docker $ docker info 6、设置Docker开机启动 $ sudo systemctl enable docker.service 7、开启Docker服务 $ sudo systemctl start docker 二、Docker Compose 安装 1、下载安装脚本 $ curl -L https://github.com/docker/compose/releases/download/1.21.1/docker-compose-`uname -s-uname -m` -o /usr/local/bin/docker-compose 2、添加执行权限 $ chmod +x /usr/local/bin/docker-compose 三、Docker 常用命令 Docker 启动 $ sudo systemctl start docker docker 开机启动 $ sudo systemctl enable docker.service docker 当前容器开机启动 $ docker run -d –restart=always 容器终端 $ docker exec -it &lt;容器id&gt; /bin/bash 挂载目录 $ docker run -d -v &lt;主机目录路径&gt;:&lt;容器目录路径 &gt; 示例： $ docker run -d –restart=always -v /root/notebooks:/notebooks -it -p 8888:8888 tensorflow/tensorflow:latest-py3 拉取镜像 $ docker pull &lt;镜像tag&gt; 查看运行中的容器 $ docker ps 查看所有容器 $ docker ps -a 关闭容器 $ docker stop &lt;容器id&gt; 强制删除容器 $ docker rm -f &lt;容器id&gt; 查看镜像文件 $ docker images 删除镜像文件 docker rmi &lt;镜像id&gt; 参考文档 [1]、Docker CE [2]、Docker Compose [3]、Docker 常用命令与操作","categories":[{"name":"Docker","slug":"Docker","permalink":"https://tanjunze.github.io/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://tanjunze.github.io/tags/Docker/"}]},{"title":"Frp内网穿透笔记","slug":"Frp内网穿透笔记","date":"2018-05-24T15:54:04.000Z","updated":"2018-10-26T02:21:33.265Z","comments":true,"path":"2018/05/24/Frp内网穿透笔记/","link":"","permalink":"https://tanjunze.github.io/2018/05/24/Frp内网穿透笔记/","excerpt":"https://github.com/fatedier/frp/issues/176","text":"https://github.com/fatedier/frp/issues/176","categories":[{"name":"杂记","slug":"杂记","permalink":"https://tanjunze.github.io/categories/杂记/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://tanjunze.github.io/tags/其他/"}]},{"title":"linux笔记之ssh","slug":"linux笔记之ssh","date":"2018-05-22T15:20:17.000Z","updated":"2018-10-26T05:50:41.011Z","comments":true,"path":"2018/05/22/linux笔记之ssh/","link":"","permalink":"https://tanjunze.github.io/2018/05/22/linux笔记之ssh/","excerpt":"1、ssh自动脚本登陆 1.1、创建shell脚本，如脚本 login.sh内容如下： 1234567#!/usr/bin/expect set timeout 3 spawn ssh user@192.168.3.24 expect \"*password*\" send \"youPassword\\r\" interact","text":"1、ssh自动脚本登陆 1.1、创建shell脚本，如脚本 login.sh内容如下： 1234567#!/usr/bin/expect set timeout 3 spawn ssh user@192.168.3.24 expect \"*password*\" send \"youPassword\\r\" interact 1.2、为自动登陆脚本添加执行权限，如： $ sudo chmod +x ./login.sh 1.3、（可选）为脚本添加别名打开用户目录下的.bash_profile文件 $ vim ~/.bash_profile 添加 别名（如：SSLogin）和 脚本路径（如：/Users/youAccount/home/login.sh）保存并退出， 如： $ alias SSLogin=’/Users/youAccount/home/login.sh’ 刷新环境变量 $ source ~/.bash_profile 在终端中直接使用别名 SSLogin去登陆了,如 $ SSLogin 2、ssh免密码登陆 参考博文：SSH免密码登陆和免ip连接 参考网址： [1]、expect教程中文版 [2]、shell实现SSH自动登陆","categories":[{"name":"Linux","slug":"Linux","permalink":"https://tanjunze.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://tanjunze.github.io/tags/Linux/"},{"name":"SSH","slug":"SSH","permalink":"https://tanjunze.github.io/tags/SSH/"}]},{"title":"使用ngrok实现内网穿透","slug":"使用ngrok实现内网穿透","date":"2018-05-21T16:30:42.000Z","updated":"2018-10-26T05:51:28.378Z","comments":true,"path":"2018/05/22/使用ngrok实现内网穿透/","link":"","permalink":"https://tanjunze.github.io/2018/05/22/使用ngrok实现内网穿透/","excerpt":"","text":"","categories":[{"name":"杂记","slug":"杂记","permalink":"https://tanjunze.github.io/categories/杂记/"}],"tags":[{"name":"代理","slug":"代理","permalink":"https://tanjunze.github.io/tags/代理/"}]},{"title":"树莓派笔记之自动挂载nfts移动硬盘","slug":"树莓派笔记之自动挂载nfts移动硬盘","date":"2018-05-21T14:52:53.000Z","updated":"2018-10-26T05:52:43.901Z","comments":true,"path":"2018/05/21/树莓派笔记之自动挂载nfts移动硬盘/","link":"","permalink":"https://tanjunze.github.io/2018/05/21/树莓派笔记之自动挂载nfts移动硬盘/","excerpt":"0、插入ntfs的存储设备如：移动硬盘1、安装ntfs-3g $ sudo apt-get install ntfs-3g 2、查询外接存储目录权限和UUID $ ls -l /dev/disk/by-uuid/ 输出：1lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &gt; ../../sda1 记下UUID - &gt; 0AC4D607C4D5F543的值","text":"0、插入ntfs的存储设备如：移动硬盘1、安装ntfs-3g $ sudo apt-get install ntfs-3g 2、查询外接存储目录权限和UUID $ ls -l /dev/disk/by-uuid/ 输出：1lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &gt; ../../sda1 记下UUID - &gt; 0AC4D607C4D5F543的值 3、创建挂载点并赋权 $ sudo mkdir /mnt/usbdrive $ sudo chmod 770 /mnt/usbdrive 4、使用id命令获取uid，pi用户和组的gid（通常为1000） $ id -u pi $ id -g pi 5、挂载，然后检查/mnt/usbdrive是否可以访问它 $ sudo mount -t ntfs-3g -o uid=1000，gid=1000，umask=007 /dev/sda1/mnt/usbdrive 6、备份驱动目录并插入新的挂载点备份： $ sudo cp /etc/fstab /etc/fstab.backup 打开驱动目录文件并在最后一行写入新的驱动信息 $ sudo nano /etc/fstab 在fstab文件中添加安装信息（用您自己的UUID，uid，gid替换）：1UUID=0AC4D607C4D5F543 /mnt/usbdrive ntfs-3g uid=1000，gid=1000，umask=007 0 0 7、重新启动树莓派 sudo reboot 8、作为NextCloud的存储设备在/mnt/usbdrive驱动（移动硬盘）上配置NextCloud的数据目录，则它应该对www-data用户拥有770权限。您可以简单地将用户www-data添加到pi组中，因为它已经拥有770的权限，如上面在fstab中设置的那样。 $ sudo usermod -a -G pi www-data 参考网址： [1]、How to setup mount / auto-mount USB Hard Drive on Raspberry Pi [2]、NTFS External HD With ownCloud on the Raspberry Pi [3]、NTFS-3g HDD 0770 and 0777 permissions Owncloud [4]、通过 NextCloudPi 为树莓派可视化搭建 NextCloud 网盘（并折腾无语的 NTFS 移动硬盘） [5]、给树莓派挂载移动硬盘或U盘 [6]、树莓派Raspberry Pi 打造低成本NAS存储家庭服务器的十个问题整理","categories":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/categories/树莓派/"}],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/tags/树莓派/"}]},{"title":"树莓派笔记之NextCloud安装","slug":"树莓派笔记之NextCloud安装","date":"2018-05-21T13:32:27.000Z","updated":"2018-10-26T05:52:34.453Z","comments":true,"path":"2018/05/21/树莓派笔记之NextCloud安装/","link":"","permalink":"https://tanjunze.github.io/2018/05/21/树莓派笔记之NextCloud安装/","excerpt":"Nextcloud 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。 1、NextCloud简单安装的三种方式总结 1.1、使用 docker 安装：文档：https://github.com/nextcloud/docker 1.2、使用 nextcloud-snap 安装文档：https://github.com/nextcloud/nextcloud-snap 1.3 使用VM安装文档：https://github.com/nextcloud/vm","text":"Nextcloud 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。 1、NextCloud简单安装的三种方式总结 1.1、使用 docker 安装：文档：https://github.com/nextcloud/docker 1.2、使用 nextcloud-snap 安装文档：https://github.com/nextcloud/nextcloud-snap 1.3 使用VM安装文档：https://github.com/nextcloud/vm NextCloud安装官方文档：https://nextcloud.com/install/#instructions-server 2、NextCloud在树莓派上的安装方式NextCloudPI官方文档：https://github.com/nextcloud/nextcloudpi 2.1、自己构建环境和部署NextCloud博文：在Raspberry Pi上简单安装Nextcloud 2.1、自动脚本构建NextCloud博文：在Raspberry Pi上自动安装Nextcloud 2.3、刷NextCloudPi镜像文件博文：树莓派Raspberry Pi安装NextCloud教程-自建家庭私有云局域网共享 2.4 使用 docker 安装：文档：NextCloudPI Github 3、NextCloud快速安装笔记 这里记录我目前使用的安装方式 步骤2.1中关键命令，方便查阅： 3.1、下载Ansible $ sudo apt-get -y install ansible 3.2、下载自动构建脚本 $ wget https://raw.githubusercontent.com/webtaster/Nextcloud/master/build_nextcloud.yml 3.3、(可选)使用 SQLite安装和配置Nextcloud $ sudo date ; ansible-playbook -s -c local -i “localhost,” build_nextcloud.yml 3.4、(可选)使用 MySQL安装和配置Nextcloud $ date ; ansible-playbook -s -c local -i “localhost,” –extra-vars “DATABASE=mysql MYSQL_ROOT_PASSWORD=qwerty NCUSER_PASSWORD=raindrop” build_nextcloud.yml 上面指令中MySQL用户密码（可以自定义）：用户：root 密码：qwerty 对应命令：MYSQL_ROOT_PASSWORD = qwerty用户：ncuser 密码：rainindrop 对应命令：NCUSER_PASSWORD = raindrop 3.5、初始化配置NextCloud在浏览器中打开 http://树莓派的IP地址/nextcloud 例如： http://192.168.1.99/nextcloud 然后根据NextCloud提示配置NextCloud就可以了。 3.6、(可选)配置树莓派目录读写权限如果在浏览器中配置NextCloud过程中错误提示“无法创建var/www/html/nextcloud/data“时，ssh等登陆树莓派并赋予775权限 $ sudo chmod -R 775 /var/www/html/nextcloud/","categories":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/categories/树莓派/"}],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/tags/树莓派/"}]},{"title":"树莓派笔记之安装配置","slug":"树莓派笔记之安装配置","date":"2018-05-21T09:38:43.000Z","updated":"2018-10-26T05:52:39.303Z","comments":true,"path":"2018/05/21/树莓派笔记之安装配置/","link":"","permalink":"https://tanjunze.github.io/2018/05/21/树莓派笔记之安装配置/","excerpt":"前言： 这篇笔记记录不使用显示屏和网线来安装系统和配置环境 1、准备 树莓派3b+板子 SD存储卡和卡套 电源线和插头 路由器（有wifi就行）","text":"前言： 这篇笔记记录不使用显示屏和网线来安装系统和配置环境 1、准备 树莓派3b+板子 SD存储卡和卡套 电源线和插头 路由器（有wifi就行） 2、\b刻录\b系统 2.1、到树莓派官网下载系统系统文件并解压 2.2、下载安装镜像刻录软件如：\bMac版Etcher和window版win32diskimager等 2.3、插入SD卡到电脑并打开刻录软件如：\b目前使用的Etcher（示例） 2.3.1、选择（Select image）\b\b从官网下载并解压\b后的 NOOBS \b或 RASPBIAN \b\b镜像文件（ xxx.img \b格式） 2.3.2、选择SD\b卡 (Select drive) 2.3.3 \b开始刻录镜像（Flash）并等待及几分钟至镜像刻录完成\b 3、\b\b配置wif\bi和ssh因为没有使用\b网线所以要在安装前配置好wifi和ssh，\b\b让\b\b板子在安装完系统后自动连接wifi并开启ssh。 3.1、配置wifi 打开SD卡，创建文件并写入保存：文件名：wpa_supplicant.conf 12345678910country=CNctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1network=&#123;ssid=&quot;mywifi&quot; #ssid（wifi名）psk=&quot;123456&quot; #password（wifi密码）key_mgmt=WPA-PSK #wifi加密方式priority=1 #优先级&#125; 3.2、配置ssh 打开SD卡，创建文件ssh文件(不写入内容，无后缀)文件名：ssh 4、安装系统并ssh登陆 4.1、将SD卡插入板子中并上电启动，如果绿灯不在闪烁且红灯常亮，那么系统安装并启动成功。 4.2、进入路由器查看名称为 raspberry设备的 IP地址，例如：设备：raspberry ，IP地址：192.168.1.56。如果没有查看到 raspberry设备和IP，请确认 步骤3.1 中文件 wpa_supplicant.conf是否正确配置wifi名称和密码。如果错误请重新刻录系统并配置wifi。 4.3、确认到 raspberry的IP（例如：192.168.1.56）后在电脑中打开终端（window使用xshell）连接到 Raspberry PI 板子的 ssh服务，例如： ssh pi@192.168.1.56 然后输入密码：raspberry(系统默认) 4.4、ssh登陆完成后就可以对板子操作了！ 5、设置wifi在板子断电或重启后自动连接网络 5.1、ssh登陆后执行 sudo nano /etc/network/interfaces 12345678910111213auto loiface lo inet loopbackiface eth0 inet dhcpallow-hotplug wlan0iface wlan0 inet dhcpwpa-ssid &quot;mywifi&quot;wpa-psk &quot;123456&quot; 保存退出 参考博文：Raspberry Pi树莓派无线网卡配置[多重方法备选] 6、安全管理 建议修改默认账户密码如： 用户：pi 密码：raspberry 注： 1、nano 编辑器 操作 退出：control x保存并退出： control o 保存 enter q确认 control x 退出 2、linxu c重启命令 sudo reboot 参考博文： [1]、树莓派如何完全无头(无屏无网线无键盘鼠标)安装 [2]、树莓派 - 修改pi账号密码,开启root账号 [3]、Raspberry Pi树莓派无线网卡配置[多重方法备选] [4]、NextCloud论坛","categories":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/categories/树莓派/"}],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"https://tanjunze.github.io/tags/树莓派/"}]},{"title":"Android手机搭建Linux环境","slug":"Android手机搭建Linux环境","date":"2018-05-17T16:22:04.000Z","updated":"2018-10-26T05:50:02.477Z","comments":true,"path":"2018/05/18/Android手机搭建Linux环境/","link":"","permalink":"https://tanjunze.github.io/2018/05/18/Android手机搭建Linux环境/","excerpt":"Termux介绍 Termux是Android，Chromebook和Fire OS的终端模拟器和Linux环境。","text":"Termux介绍 Termux是Android，Chromebook和Fire OS的终端模拟器和Linux环境。官网：https://wiki.termux.comgithub：https://github.com/termux/termux-app 1、配置Termux。1.1 升级 apt(否则无法安装软件)1apt update 1.2 安装openssh1apt intall openssh","categories":[{"name":"Android","slug":"Android","permalink":"https://tanjunze.github.io/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://tanjunze.github.io/tags/Android/"}]},{"title":"Mac使用Android代理翻墙记录","slug":"Mac使用Android代理翻墙记录","date":"2018-05-17T15:29:09.000Z","updated":"2018-10-26T05:51:01.374Z","comments":true,"path":"2018/05/17/Mac使用Android代理翻墙记录/","link":"","permalink":"https://tanjunze.github.io/2018/05/17/Mac使用Android代理翻墙记录/","excerpt":"1、下载Proxy Server代理软件2、创建一个代理服务（Proxy Server）","text":"1、下载Proxy Server代理软件2、创建一个代理服务（Proxy Server） 3、设置服务名和端口并返回后点击Start按钮启动服务 4、打开FireFox浏览器并配置网络代理 5、设置启动代理服务手机的Ip和上面填写端口 到此 FireFox 可以使用手机的代理服务，如果手机已经翻墙了，那么FireFox就可以实现翻墙。 同样可以为电脑设置代理配置，实现全局代理。","categories":[{"name":"杂记","slug":"杂记","permalink":"https://tanjunze.github.io/categories/杂记/"}],"tags":[{"name":"代理","slug":"代理","permalink":"https://tanjunze.github.io/tags/代理/"}]},{"title":"机器学习资料整理","slug":"机器学习资料整理","date":"2018-04-27T15:36:40.000Z","updated":"2018-10-26T05:52:14.126Z","comments":true,"path":"2018/04/27/机器学习资料整理/","link":"","permalink":"https://tanjunze.github.io/2018/04/27/机器学习资料整理/","excerpt":"我的机器学习资料，为了方便查询同步到笔记中。 机器学习资料文档资料 深度学习资料-Github 神经网络和深度学习•Michael Nielsen 神经网络和深度学习•Michael Nielsen（翻译）","text":"我的机器学习资料，为了方便查询同步到笔记中。 机器学习资料文档资料 深度学习资料-Github 神经网络和深度学习•Michael Nielsen 神经网络和深度学习•Michael Nielsen（翻译） 深度学习•Bengio 深度学习•Bengio（翻译） Tensorflow官网-国内 Tensorflow社区-国内 深度学习资料整理1-国内 深度学习路线图 深度学习博文 深度学习Java框架 在线教育 Google深度学习-Udacity课程 Google机器学习速成课程 深度学习-Stanford-UFLDL 深度学习-Stanford-Tutorial 人工智能实践：Tensorflow笔记-慕课网 莫烦Python 工具 python jupyter notebook 框架 Tensorflow Tensorflow（极客学院-翻译） TensorLayer-中文 TensorLayer scikit-learn scikit-learn 翻译 caffe 或 caffe2 Keras keras 翻译 theano … 其他文档 Deepmind 积卷神经网络-斯坦福 Siraj Raval-Gitub-Youtube CS231n课程-积卷网络 CS231n课程-积卷网络-中文翻译 深度学习-开源项目 音频合成-Merlin 音频合成-Wavenet 深度学习-Udacity-Code 无人驾驶-BehavioralCloning) 无人驾驶-udacity-sim 无人驾驶-CSDN博文 机器学习数据集 机器学习数据集1-知乎提问 机器学习数据集2-知乎博文","categories":[{"name":"资料","slug":"资料","permalink":"https://tanjunze.github.io/categories/资料/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"https://tanjunze.github.io/tags/机器学习/"},{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://tanjunze.github.io/tags/TensorFlow/"}]},{"title":"Hexo/GitHub Pages搭建个人博客","slug":"Hexo搭建个人博客","date":"2018-04-27T13:53:59.000Z","updated":"2018-10-26T05:50:17.080Z","comments":true,"path":"2018/04/27/Hexo搭建个人博客/","link":"","permalink":"https://tanjunze.github.io/2018/04/27/Hexo搭建个人博客/","excerpt":"前言好久没有在github pages 中更新笔记了，刚把旧的github仓库重新整理了。在此记录一下，日后逐渐将旧笔记往这里迁移。","text":"前言好久没有在github pages 中更新笔记了，刚把旧的github仓库重新整理了。在此记录一下，日后逐渐将旧笔记往这里迁移。 1、配置环境Hexo官方文档: Hexo wiki \b首先安装: Node.js Git 再安装 Hexo1$ npm install -g hexo-cli \b到此Hexo安装完成，如果\b失败\b请参考官网，这里只记录简单流程。 2、搭建站点执行命令：123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 3\b、配置\b站点\b打开 folder/_config.yml 文件修改配置即可 4、\b启动服务1$ hexo server \b\b\b\b简写1$ hexo s 此时控制台中打印出 http://localhost:4000/ ,\b再\b使用\b\b\b\b浏览器打开你就可以\b看到Hello world页面了。 5、\b发布到github上参考：Hexo 部署 \b注意：首先\b你需要创建github账户，gtihub的仓库并push、pull\b\b仓库已验证\b你的github配置完成。 再\b创建一个仓库命名为&lt;\b你的用户名&gt;.github.io,如： tanjunze.github.io 打开本地&lt;folder&gt; Hexo工程安装 hexo-deployer-git123cd &lt;folder&gt;npm install hexo-deployer-git --save \b\b\b打开本地folder/_config.yml找到Deployment选项，并修改：其中将repo改为1git@github.com:&lt;你的账户名&gt;/&lt;你的账户名&gt;.github.io.git 执行1hexo deploy 如果push成功，打开https://&lt;\b你的用户名&gt;.github.io,例如： https://tanjunze.github.io/ 恭喜你成功搭建了在Hexo + Gtihub Pages 的个人免费站点了。 参考网址：http://www.cnblogs.com/zhcncn/p/4097881.html","categories":[{"name":"杂记","slug":"杂记","permalink":"https://tanjunze.github.io/categories/杂记/"}],"tags":[{"name":"其他","slug":"其他","permalink":"https://tanjunze.github.io/tags/其他/"}]}]}