<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tanjunze笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tanjunze.github.io/"/>
  <updated>2018-10-26T07:29:00.498Z</updated>
  <id>https://tanjunze.github.io/</id>
  
  <author>
    <name>tanjunze</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Blog中添加背景图和动效</title>
    <link href="https://tanjunze.github.io/2018/10/26/%E5%9C%A8Blog%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%9B%BE%E5%92%8C%E5%8A%A8%E6%95%88/"/>
    <id>https://tanjunze.github.io/2018/10/26/在Blog中添加背景图和动效/</id>
    <published>2018-10-26T14:53:36.000Z</published>
    <updated>2018-10-26T07:29:00.498Z</updated>
    
    <content type="html"><![CDATA[<p>记录一次在Blog中添加动态效果。</p><p>参考网址：<a href="https://www.wushile.top/article/201810212028.html" target="_blank" rel="noopener">网站动态背景（动态图）和静态背景（背景图片）的主题美化</a><br><a id="more"></a></p><h2 id="添加蜘蛛网动效"><a href="#添加蜘蛛网动效" class="headerlink" title="添加蜘蛛网动效"></a>添加蜘蛛网动效</h2><p>需要在html页面的<code>&lt;body&gt;&lt;/body&gt;</code>标签中添加下面的js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    ! <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">w, v, i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> w.getAttribute(v) || i</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(i)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> i = j(<span class="string">"script"</span>),</span><br><span class="line">                w = i.length,</span><br><span class="line">                v = i[w - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                l: w,</span><br><span class="line">                z: o(v, <span class="string">"zIndex"</span>, <span class="number">-1</span>), <span class="comment">//设置动态图显示的层位，一般-1就行，不用改</span></span><br><span class="line">                o: o(v, <span class="string">"opacity"</span>, <span class="number">0.5</span>), <span class="comment">//0.5显示的是线条的透明度，可以自行调整</span></span><br><span class="line">                c: o(v, <span class="string">"color"</span>, <span class="string">"0,0,0"</span>), <span class="comment">//设置线条的颜色，三个0,0,0分别代表RGB颜色数值，不知道的可以打开PS里的拾色器就可以看到RGB数值了</span></span><br><span class="line">                n: o(v, <span class="string">"count"</span>, <span class="number">120</span>), <span class="comment">//设置线条显示的数量，有密集恐惧症的朋友可别把数值设置太大哦</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            r = u.width = <span class="built_in">window</span>.innerWidth || <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth, n = u.height = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            e.clearRect(<span class="number">0</span>, <span class="number">0</span>, r, n);</span><br><span class="line">            <span class="keyword">var</span> w = [f].concat(t);</span><br><span class="line">            <span class="keyword">var</span> x, v, A, B, z, y;</span><br><span class="line">            t.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                i.x += i.xa, i.y += i.ya, i.xa *= i.x &gt; r || i.x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, i.ya *= i.y &gt; n || i.y &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, e.fillRect(i.x - <span class="number">0.5</span>, i.y - <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; w.length; v++) &#123;</span><br><span class="line">                    x = w[v];</span><br><span class="line">                    <span class="keyword">if</span> (i !== x &amp;&amp; <span class="literal">null</span> !== x.x &amp;&amp; <span class="literal">null</span> !== x.y) &#123;</span><br><span class="line">                        B = i.x - x.x, z = i.y - x.y, y = B * B + z * z;</span><br><span class="line">                        y &lt; x.max &amp;&amp; (x === f &amp;&amp; y &gt;= x.max / <span class="number">2</span> &amp;&amp; (i.x -= <span class="number">0.03</span> * B, i.y -= <span class="number">0.03</span> * z), A = (x.max - y) / x.max, e.beginPath(), e.lineWidth = A / <span class="number">2</span>, e.strokeStyle = <span class="string">"rgba("</span> + s.c + <span class="string">","</span> + (A + <span class="number">0.2</span>) + <span class="string">")"</span>, e.moveTo(i.x, i.y), e.lineTo(x.x, x.y), e.stroke())</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                w.splice(w.indexOf(i), <span class="number">1</span>)</span><br><span class="line">            &#125;), m(b)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> u = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>),</span><br><span class="line">            s = l(),</span><br><span class="line">            c = <span class="string">"c_n"</span> + s.l,</span><br><span class="line">            e = u.getContext(<span class="string">"2d"</span>),</span><br><span class="line">            r, n, m = <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.oRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">window</span>.setTimeout(i, <span class="number">1000</span> / <span class="number">45</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            a = <span class="built_in">Math</span>.random,</span><br><span class="line">            f = &#123;</span><br><span class="line">                x: <span class="literal">null</span>,</span><br><span class="line">                y: <span class="literal">null</span>,</span><br><span class="line">                max: <span class="number">20000</span></span><br><span class="line">            &#125;;</span><br><span class="line">        u.id = c;</span><br><span class="line">        u.style.cssText = <span class="string">"position:fixed;top:0;left:0;z-index:"</span> + s.z + <span class="string">";opacity:"</span> + s.o;</span><br><span class="line">        j(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(u);</span><br><span class="line">        k(), <span class="built_in">window</span>.onresize = k;</span><br><span class="line">        <span class="built_in">window</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            i = i || <span class="built_in">window</span>.event, f.x = i.clientX, f.y = i.clientY</span><br><span class="line">        &#125;, <span class="built_in">window</span>.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            f.x = <span class="literal">null</span>, f.y = <span class="literal">null</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = [], p = <span class="number">0</span>; s.n &gt; p; p++) &#123;</span><br><span class="line">            <span class="keyword">var</span> h = a() * r,</span><br><span class="line">                g = a() * n,</span><br><span class="line">                q = <span class="number">2</span> * a() - <span class="number">1</span>,</span><br><span class="line">                d = <span class="number">2</span> * a() - <span class="number">1</span>;</span><br><span class="line">            t.push(&#123;</span><br><span class="line">                x: h,</span><br><span class="line">                y: g,</span><br><span class="line">                xa: q,</span><br><span class="line">                ya: d,</span><br><span class="line">                max: <span class="number">6000</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            b()</span><br><span class="line">        &#125;, <span class="number">100</span>)</span><br><span class="line">    &#125;();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h2><p>我的blog的样式有点差异，这记录一下。</p><p>在css样式文件中添加一下css:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(背景图路径) no-repeat fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong>背景图片最好是：1920x1080</p><p>背景图片素材网：<a href="https://www.toptal.com/designers/subtlepatterns/" target="_blank" rel="noopener">Toptal</a></p><p>好了，通过以上2步操作就可以实现看的蜘蛛网效果</p><p>本blog使用<code>hexo</code> +<code>material-x</code> 搭建，<br><code>body 标签</code>文件在 <code>&lt;hexo blog path&gt;\themes\material-x\layout\layout.ejs</code><br><code>body CSS</code>文件在 <code>&lt;hexo blog path&gt;\themes\material-x\source\less\_base.less</code>中添加</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一次在Blog中添加动态效果。&lt;/p&gt;
&lt;p&gt;参考网址：&lt;a href=&quot;https://www.wushile.top/article/201810212028.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站动态背景（动态图）和静态背景（背景图片）的主题美化&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker命令笔记</title>
    <link href="https://tanjunze.github.io/2018/06/05/Docker%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://tanjunze.github.io/2018/06/05/Docker命令笔记/</id>
    <published>2018-06-05T10:15:12.000Z</published>
    <updated>2018-10-26T02:20:58.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Docker-安装"><a href="#一、Docker-安装" class="headerlink" title="一、Docker 安装"></a>一、Docker 安装</h2><p>本示例采用sh脚本安装,其他方式参考<a href="https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce" target="_blank" rel="noopener">Docker CE</a>官网。<br><a id="more"></a></p><ul><li><p>0、root用户登陆</p></li><li><p>1、升级yum包：</p><blockquote><p>$ sudo yum update</p></blockquote></li><li><p>2、（可选）卸载旧的Docker</p><blockquote><p>$ sudo yum erase docker docker-common docker-client docker-compose</p></blockquote></li><li><p>4、执行 Docker 安装脚本</p><blockquote><p>$ curl -fsSL <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a> | sh<br>或<br>$ wget -qO- <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a> | sh</p></blockquote></li><li><p>5、测试Docker</p><blockquote><p>$ docker info</p></blockquote></li><li><p>6、设置Docker开机启动</p><blockquote><p>$ sudo systemctl enable docker.service</p></blockquote></li><li><p>7、开启Docker服务</p><blockquote><p>$ sudo systemctl start docker</p></blockquote></li></ul><h2 id="二、Docker-Compose-安装"><a href="#二、Docker-Compose-安装" class="headerlink" title="二、Docker Compose 安装"></a>二、Docker Compose 安装</h2><ul><li><p>1、下载安装脚本</p><blockquote><p>$ curl -L <a href="https://github.com/docker/compose/releases/download/1.21.1/docker-compose-`uname" target="_blank" rel="noopener">https://github.com/docker/compose/releases/download/1.21.1/docker-compose-`uname</a> -s<code>-</code>uname -m` -o /usr/local/bin/docker-compose</p></blockquote></li><li><p>2、添加执行权限</p><blockquote><p>$ chmod +x /usr/local/bin/docker-compose</p></blockquote></li></ul><h2 id="三、Docker-常用命令"><a href="#三、Docker-常用命令" class="headerlink" title="三、Docker 常用命令"></a>三、Docker 常用命令</h2><ul><li><p>Docker 启动</p><blockquote><p>$ sudo systemctl start docker</p></blockquote></li><li><p>docker 开机启动</p><blockquote><p>$ sudo systemctl enable docker.service</p></blockquote></li><li><p>docker 当前容器开机启动</p><blockquote><p>$ docker run -d –restart=always </p></blockquote></li><li><p>容器终端</p><blockquote><p>$ docker exec -it &lt;容器id&gt; /bin/bash</p></blockquote></li><li><p>挂载目录</p><blockquote><p>$ docker run -d -v &lt;主机目录路径&gt;:&lt;容器目录路径 &gt;</p></blockquote></li><li><p>示例：</p><blockquote><p>$ docker run -d –restart=always -v /root/notebooks:/notebooks -it -p 8888:8888 tensorflow/tensorflow:latest-py3</p></blockquote></li><li><p>拉取镜像</p><blockquote><p>$ docker pull &lt;镜像tag&gt;</p></blockquote></li><li><p>查看运行中的容器</p><blockquote><p>$ docker ps</p></blockquote></li><li><p>查看所有容器</p><blockquote><p>$ docker ps -a</p></blockquote></li><li><p>关闭容器</p><blockquote><p>$ docker stop &lt;容器id&gt;</p></blockquote></li><li><p>强制删除容器</p><blockquote><p>$ docker rm -f &lt;容器id&gt;</p></blockquote></li><li><p>查看镜像文件</p><blockquote><p>$ docker images</p></blockquote></li><li><p>删除镜像文件</p><blockquote><p>docker rmi &lt;镜像id&gt;</p></blockquote></li></ul><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li>[1]、<a href="https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce" target="_blank" rel="noopener">Docker CE</a></li><li>[2]、<a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">Docker Compose</a></li><li>[3]、<a href="https://www.jianshu.com/p/adaa34795e64" target="_blank" rel="noopener">Docker 常用命令与操作</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Docker-安装&quot;&gt;&lt;a href=&quot;#一、Docker-安装&quot; class=&quot;headerlink&quot; title=&quot;一、Docker 安装&quot;&gt;&lt;/a&gt;一、Docker 安装&lt;/h2&gt;&lt;p&gt;本示例采用sh脚本安装,其他方式参考&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker CE&lt;/a&gt;官网。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://tanjunze.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://tanjunze.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Frp内网穿透笔记</title>
    <link href="https://tanjunze.github.io/2018/05/24/Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    <id>https://tanjunze.github.io/2018/05/24/Frp内网穿透笔记/</id>
    <published>2018-05-24T15:54:04.000Z</published>
    <updated>2018-10-26T02:21:33.265Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/fatedier/frp/issues/176" target="_blank" rel="noopener">https://github.com/fatedier/frp/issues/176</a><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/fatedier/frp/issues/176&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/fatedier/frp/issues/176&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="其他" scheme="https://tanjunze.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>linux笔记之ssh</title>
    <link href="https://tanjunze.github.io/2018/05/22/linux%E7%AC%94%E8%AE%B0%E4%B9%8Bssh/"/>
    <id>https://tanjunze.github.io/2018/05/22/linux笔记之ssh/</id>
    <published>2018-05-22T15:20:17.000Z</published>
    <updated>2018-10-26T05:50:41.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、ssh自动脚本登陆"><a href="#1、ssh自动脚本登陆" class="headerlink" title="1、ssh自动脚本登陆"></a>1、ssh自动脚本登陆</h2><ul><li><p>1.1、创建shell脚本，如脚本 login.sh内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect                   </span></span><br><span class="line"></span><br><span class="line">set timeout 3                     </span><br><span class="line">spawn ssh user@192.168.3.24       </span><br><span class="line">expect "*password*"                 </span><br><span class="line">send "youPassword\r"   </span><br><span class="line">interact</span><br></pre></td></tr></table></figure><a id="more"></a></li><li>1.2、为自动登陆脚本添加执行权限，如：<blockquote><p>$ sudo chmod +x ./login.sh</p></blockquote></li><li><p>1.3、（可选）为脚本添加别名<br>打开用户目录下的.bash_profile文件</p><blockquote><p>$ vim ~/.bash_profile</p></blockquote><p>添加 <strong>别名（如：SSLogin）</strong>和 <strong>脚本路径（如：/Users/youAccount/home/login.sh）</strong>保存并退出， 如：</p><blockquote><p>$ alias SSLogin=’/Users/youAccount/home/login.sh’</p></blockquote><p>刷新环境变量</p><blockquote><p>$ source ~/.bash_profile</p></blockquote><p>在终端中直接使用别名 <strong>SSLogin</strong>去登陆了,如</p><blockquote><p>$ SSLogin</p></blockquote></li></ul><h2 id="2、ssh免密码登陆"><a href="#2、ssh免密码登陆" class="headerlink" title="2、ssh免密码登陆"></a>2、ssh免密码登陆</h2><p>   参考博文：<a href="https://www.jianshu.com/p/03effb53705c" target="_blank" rel="noopener">SSH免密码登陆和免ip连接</a></p><p>参考网址：<br>   [1]、<a href="http://xstarcd.github.io/wiki/shell/expect_handbook.html" target="_blank" rel="noopener">expect教程中文版</a><br>   [2]、<a href="https://www.cnblogs.com/zhenbianshu/p/5867440.html" target="_blank" rel="noopener">shell实现SSH自动登陆</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、ssh自动脚本登陆&quot;&gt;&lt;a href=&quot;#1、ssh自动脚本登陆&quot; class=&quot;headerlink&quot; title=&quot;1、ssh自动脚本登陆&quot;&gt;&lt;/a&gt;1、ssh自动脚本登陆&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.1、创建shell脚本，如脚本 login.sh内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;!/usr/bin/expect                   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set timeout 3                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spawn ssh user@192.168.3.24       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expect &quot;*password*&quot;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send &quot;youPassword\r&quot;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interact&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://tanjunze.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://tanjunze.github.io/tags/Linux/"/>
    
      <category term="SSH" scheme="https://tanjunze.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>使用ngrok实现内网穿透</title>
    <link href="https://tanjunze.github.io/2018/05/22/%E4%BD%BF%E7%94%A8ngrok%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>https://tanjunze.github.io/2018/05/22/使用ngrok实现内网穿透/</id>
    <published>2018-05-21T16:30:42.000Z</published>
    <updated>2018-10-26T05:51:28.378Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="代理" scheme="https://tanjunze.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之自动挂载nfts移动硬盘</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDnfts%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之自动挂载nfts移动硬盘/</id>
    <published>2018-05-21T14:52:53.000Z</published>
    <updated>2018-10-26T05:52:43.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0、插入ntfs的存储设备如：移动硬盘"><a href="#0、插入ntfs的存储设备如：移动硬盘" class="headerlink" title="0、插入ntfs的存储设备如：移动硬盘"></a>0、插入ntfs的存储设备如：移动硬盘</h2><h2 id="1、安装ntfs-3g"><a href="#1、安装ntfs-3g" class="headerlink" title="1、安装ntfs-3g"></a>1、安装<a href="https://en.wikipedia.org/wiki/NTFS-3G" target="_blank" rel="noopener">ntfs-3g</a></h2><blockquote><p>$ sudo apt-get install ntfs-3g</p></blockquote><h2 id="2、查询外接存储目录权限和UUID"><a href="#2、查询外接存储目录权限和UUID" class="headerlink" title="2、查询外接存储目录权限和UUID"></a>2、查询外接存储目录权限和UUID</h2><blockquote><p>$ ls -l /dev/disk/by-uuid/</p></blockquote><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &gt; ../../sda1</span><br></pre></td></tr></table></figure></p><p>记下UUID - &gt; 0AC4D607C4D5F543的值<br><a id="more"></a></p><h2 id="3、创建挂载点并赋权"><a href="#3、创建挂载点并赋权" class="headerlink" title="3、创建挂载点并赋权"></a>3、创建挂载点并赋权</h2><blockquote><p>$ sudo mkdir /mnt/usbdrive</p></blockquote><blockquote><p>$ sudo chmod 770 /mnt/usbdrive</p></blockquote><h2 id="4、使用id命令获取uid，pi用户和组的gid（通常为1000）"><a href="#4、使用id命令获取uid，pi用户和组的gid（通常为1000）" class="headerlink" title="4、使用id命令获取uid，pi用户和组的gid（通常为1000）"></a>4、使用id命令获取uid，pi用户和组的gid（通常为1000）</h2><blockquote><p>$ id -u pi</p></blockquote><blockquote><p>$ id -g pi</p></blockquote><h2 id="5、挂载，然后检查-mnt-usbdrive是否可以访问它"><a href="#5、挂载，然后检查-mnt-usbdrive是否可以访问它" class="headerlink" title="5、挂载，然后检查/mnt/usbdrive是否可以访问它"></a>5、挂载，然后检查<strong>/mnt/usbdrive</strong>是否可以访问它</h2><blockquote><p>$ sudo mount -t ntfs-3g -o uid=1000，gid=1000，umask=007 /dev/sda1/mnt/usbdrive</p></blockquote><h2 id="6、备份驱动目录并插入新的挂载点"><a href="#6、备份驱动目录并插入新的挂载点" class="headerlink" title="6、备份驱动目录并插入新的挂载点"></a>6、备份驱动目录并插入新的挂载点</h2><p>备份：</p><blockquote><p>$ sudo cp /etc/fstab /etc/fstab.backup </p></blockquote><p>打开驱动目录文件并在最后一行写入新的驱动信息</p><blockquote><p>$ sudo nano /etc/fstab</p></blockquote><p>在fstab文件中添加安装信息（用您自己的UUID，uid，gid替换）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=0AC4D607C4D5F543 /mnt/usbdrive ntfs-3g uid=1000，gid=1000，umask=007 0 0</span><br></pre></td></tr></table></figure></p><h2 id="7、重新启动树莓派"><a href="#7、重新启动树莓派" class="headerlink" title="7、重新启动树莓派"></a>7、重新启动树莓派</h2><blockquote><p>sudo reboot</p></blockquote><h2 id="8、作为NextCloud的存储设备"><a href="#8、作为NextCloud的存储设备" class="headerlink" title="8、作为NextCloud的存储设备"></a>8、作为NextCloud的存储设备</h2><p>在/mnt/usbdrive驱动（移动硬盘）上配置NextCloud的数据目录，则它应该对www-data用户拥有770权限。您可以简单地将用户www-data添加到pi组中，因为它已经拥有770的权限，如上面在fstab中设置的那样。</p><blockquote><p>$ sudo usermod -a -G pi www-data</p></blockquote><p>参考网址：<br>  [1]、<a href="http://www.techjawab.com/2013/06/how-to-setup-mount-auto-mount-usb-hard.html" target="_blank" rel="noopener">How to setup mount / auto-mount USB Hard Drive on Raspberry Pi</a><br>  [2]、<a href="http://ja.cques.ca/blog/2013/09/25/ntfs-external-hd-with-owncloud-on-the-raspberry-pi/" target="_blank" rel="noopener">NTFS External HD With ownCloud on the Raspberry Pi</a><br>  [3]、<a href="https://raspberrypi.stackexchange.com/questions/10236/ntfs-3g-hdd-0770-and-0777-permissions-owncloud" target="_blank" rel="noopener">NTFS-3g HDD 0770 and 0777 permissions Owncloud</a><br>  [4]、<a href="https://www.liaronce.win/archives/776" target="_blank" rel="noopener">通过 NextCloudPi 为树莓派可视化搭建 NextCloud 网盘（并折腾无语的 NTFS 移动硬盘）</a><br>  [5]、<a href="http://shumeipai.nxez.com/2013/09/08/raspberry-pi-to-mount-the-removable-hard-disk.html" target="_blank" rel="noopener">给树莓派挂载移动硬盘或U盘</a><br>  [6]、<a href="http://www.freehao123.com/raspberry-pi-nas/" target="_blank" rel="noopener">树莓派Raspberry Pi 打造低成本NAS存储家庭服务器的十个问题整理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0、插入ntfs的存储设备如：移动硬盘&quot;&gt;&lt;a href=&quot;#0、插入ntfs的存储设备如：移动硬盘&quot; class=&quot;headerlink&quot; title=&quot;0、插入ntfs的存储设备如：移动硬盘&quot;&gt;&lt;/a&gt;0、插入ntfs的存储设备如：移动硬盘&lt;/h2&gt;&lt;h2 id=&quot;1、安装ntfs-3g&quot;&gt;&lt;a href=&quot;#1、安装ntfs-3g&quot; class=&quot;headerlink&quot; title=&quot;1、安装ntfs-3g&quot;&gt;&lt;/a&gt;1、安装&lt;a href=&quot;https://en.wikipedia.org/wiki/NTFS-3G&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ntfs-3g&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$ sudo apt-get install ntfs-3g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2、查询外接存储目录权限和UUID&quot;&gt;&lt;a href=&quot;#2、查询外接存储目录权限和UUID&quot; class=&quot;headerlink&quot; title=&quot;2、查询外接存储目录权限和UUID&quot;&gt;&lt;/a&gt;2、查询外接存储目录权限和UUID&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$ ls -l /dev/disk/by-uuid/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &amp;gt; ../../sda1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;记下UUID - &amp;gt; 0AC4D607C4D5F543的值&lt;br&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之NextCloud安装</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8BNextCloud%E5%AE%89%E8%A3%85/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之NextCloud安装/</id>
    <published>2018-05-21T13:32:27.000Z</published>
    <updated>2018-10-26T05:52:34.453Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/nextcloud/server" target="_blank" rel="noopener">Nextcloud</a> 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。</p></blockquote><h2 id="1、NextCloud简单安装的三种方式总结"><a href="#1、NextCloud简单安装的三种方式总结" class="headerlink" title="1、NextCloud简单安装的三种方式总结"></a>1、NextCloud简单安装的三种方式总结</h2><ul><li><p>1.1、使用 docker 安装：<br>文档：<a href="https://github.com/nextcloud/docker" target="_blank" rel="noopener">https://github.com/nextcloud/docker</a></p></li><li><p>1.2、使用 nextcloud-snap 安装<br>文档：<a href="https://github.com/nextcloud/nextcloud-snap" target="_blank" rel="noopener">https://github.com/nextcloud/nextcloud-snap</a></p></li><li><p>1.3 使用VM安装<br>文档：<a href="https://github.com/nextcloud/vm" target="_blank" rel="noopener">https://github.com/nextcloud/vm</a></p><a id="more"></a><p>NextCloud安装官方文档：<a href="https://nextcloud.com/install/#instructions-server" target="_blank" rel="noopener">https://nextcloud.com/install/#instructions-server</a></p></li></ul><h2 id="2、NextCloud在树莓派上的安装方式"><a href="#2、NextCloud在树莓派上的安装方式" class="headerlink" title="2、NextCloud在树莓派上的安装方式"></a>2、NextCloud在树莓派上的安装方式</h2><p>NextCloudPI官方文档：<a href="https://github.com/nextcloud/nextcloudpi" target="_blank" rel="noopener">https://github.com/nextcloud/nextcloudpi</a></p><ul><li><p>2.1、自己构建环境和部署NextCloud<br>博文：<a href="http://unixetc.co.uk/2016/11/20/simple-nextcloud-installation-on-raspberry-pi/" target="_blank" rel="noopener">在Raspberry Pi上简单安装Nextcloud</a></p></li><li><p>2.1、自动脚本构建NextCloud<br>博文：<a href="http://unixetc.co.uk/2017/11/25/automatic-nextcloud-installation-on-raspberry-pi/" target="_blank" rel="noopener">在Raspberry Pi上自动安装Nextcloud</a></p></li><li><p>2.3、刷NextCloudPi镜像文件<br>博文：<a href="https://wzfou.com/raspberry-nextcloud/" target="_blank" rel="noopener">树莓派Raspberry Pi安装NextCloud教程-自建家庭私有云局域网共享</a></p></li><li><p>2.4 使用 docker 安装：<br>文档：<a href="https://github.com/nextcloud/nextcloudpi" target="_blank" rel="noopener">NextCloudPI Github</a></p></li></ul><h2 id="3、NextCloud快速安装笔记"><a href="#3、NextCloud快速安装笔记" class="headerlink" title="3、NextCloud快速安装笔记"></a>3、NextCloud快速安装笔记</h2><p>  这里记录我目前使用的安装方式 <strong>步骤2.1</strong>中关键命令，方便查阅：</p><ul><li><p>3.1、下载<a href="https://en.wikipedia.org/wiki/Ansible_(software" target="_blank" rel="noopener">Ansible</a></p><blockquote><p>$ sudo apt-get -y install ansible</p></blockquote></li><li><p>3.2、下载自动构建脚本</p><blockquote><p>$ wget <a href="https://raw.githubusercontent.com/webtaster/Nextcloud/master/build_nextcloud.yml" target="_blank" rel="noopener">https://raw.githubusercontent.com/webtaster/Nextcloud/master/build_nextcloud.yml</a></p></blockquote></li><li><p>3.3、(可选)使用 <strong>SQLite</strong>安装和配置Nextcloud</p><blockquote><p>$ sudo date ; ansible-playbook -s -c local -i “localhost,” build_nextcloud.yml</p></blockquote></li><li><p>3.4、(可选)使用 <strong>MySQL</strong>安装和配置Nextcloud</p><blockquote><p>$ date ; ansible-playbook -s -c local -i “localhost,” –extra-vars “DATABASE=mysql MYSQL_ROOT_PASSWORD=qwerty NCUSER_PASSWORD=raindrop” build_nextcloud.yml</p></blockquote><p>上面指令中MySQL用户密码（可以自定义）：<br>用户：root     密码：qwerty         对应命令：<strong>MYSQL_ROOT_PASSWORD = qwerty</strong><br>用户：ncuser   密码：rainindrop     对应命令：<strong>NCUSER_PASSWORD = raindrop</strong></p></li><li><p>3.5、初始化配置NextCloud<br>在浏览器中打开</p><blockquote><p>http://树莓派的IP地址/nextcloud</p></blockquote><p>例如：</p><blockquote><p><a href="http://192.168.1.99/nextcloud" target="_blank" rel="noopener">http://192.168.1.99/nextcloud</a></p></blockquote><p>然后根据NextCloud提示配置NextCloud就可以了。</p></li><li><p>3.6、(可选)配置树莓派目录读写权限<br>如果在浏览器中配置NextCloud过程中错误提示“无法创建var/www/html/nextcloud/data“时，ssh等登陆树莓派并赋予<strong>775权限</strong></p><blockquote><p>$ sudo chmod -R 775 /var/www/html/nextcloud/</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nextcloud/server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nextcloud&lt;/a&gt; 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、NextCloud简单安装的三种方式总结&quot;&gt;&lt;a href=&quot;#1、NextCloud简单安装的三种方式总结&quot; class=&quot;headerlink&quot; title=&quot;1、NextCloud简单安装的三种方式总结&quot;&gt;&lt;/a&gt;1、NextCloud简单安装的三种方式总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.1、使用 docker 安装：&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/docker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/docker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2、使用 nextcloud-snap 安装&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/nextcloud-snap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/nextcloud-snap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.3 使用VM安装&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/vm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/vm&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之安装配置</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之安装配置/</id>
    <published>2018-05-21T09:38:43.000Z</published>
    <updated>2018-10-26T05:52:39.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言： 这篇笔记记录不使用<strong>显示屏</strong>和<strong>网线</strong>来安装系统和配置环境</p></blockquote><h2 id="1、准备"><a href="#1、准备" class="headerlink" title="1、准备"></a>1、准备</h2><ul><li><p>树莓派3b+板子</p></li><li><p>SD存储卡和卡套</p></li><li><p>电源线和插头</p></li><li><p>路由器（有wifi就行）</p><a id="more"></a><h2 id="2、刻录系统"><a href="#2、刻录系统" class="headerlink" title="2、刻录系统"></a>2、刻录系统</h2></li><li><p>2.1、到<strong><a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">树莓派官网</a></strong>下载系统系统文件并解压</p></li><li><p>2.2、下载安装镜像刻录软件如：Mac版<strong><a href="http://mac.softpedia.com/get/Utilities/Etcher.shtml" target="_blank" rel="noopener">Etcher</a></strong>和window版win32diskimager等</p></li><li><p>2.3、插入SD卡到电脑并打开刻录软件如：目前使用的Etcher（示例）<br><img src="/images/WX20180521-100451@2x.png" alt=""></p><ul><li><p>2.3.1、选择（<strong>Select image</strong>）从官网下载并解压后的<strong> NOOBS </strong>或<strong> RASPBIAN </strong> 镜像文件（<strong> xxx.img </strong>格式）</p></li><li><p>2.3.2、选择SD卡 (<strong>Select drive</strong>)</p></li><li><p>2.3.3 开始刻录镜像（<strong>Flash</strong>）并等待及几分钟至镜像刻录完成</p></li></ul></li></ul><h2 id="3、配置wifi和ssh"><a href="#3、配置wifi和ssh" class="headerlink" title="3、配置wifi和ssh"></a>3、配置wifi和ssh</h2><p>因为没有使用网线所以要在安装前配置好wifi和ssh，让板子在安装完系统后自动连接wifi并开启ssh。</p><ul><li><p>3.1、配置wifi</p><p>打开SD卡，创建文件并写入保存：<br>文件名：<strong>wpa_supplicant.conf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;mywifi&quot;        #ssid（wifi名）</span><br><span class="line">psk=&quot;123456&quot;          #password（wifi密码）</span><br><span class="line">key_mgmt=WPA-PSK     #wifi加密方式</span><br><span class="line">priority=1           #优先级</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>3.2、配置ssh</p><p>打开SD卡，创建文件ssh文件(不写入内容，无后缀)<br>文件名：<strong>ssh</strong></p></li></ul><h2 id="4、安装系统并ssh登陆"><a href="#4、安装系统并ssh登陆" class="headerlink" title="4、安装系统并ssh登陆"></a>4、安装系统并ssh登陆</h2><ul><li><p>4.1、将SD卡插入板子中并上电启动，如果<strong>绿灯不在闪烁</strong>且<strong>红灯常亮</strong>，那么系统安装并启动成功。</p></li><li><p>4.2、进入路由器查看名称为 <strong>raspberry</strong>设备的 <strong>IP地址</strong>，例如：设备：raspberry ，IP地址：192.168.1.56。<br>如果没有查看到 <strong>raspberry</strong>设备和IP，请确认 <strong>步骤3.1</strong> 中文件 <strong>wpa_supplicant.conf</strong>是否正确配置wifi名称和密码。如果错误请重新刻录系统并配置wifi。</p></li><li><p>4.3、确认到 <strong>raspberry</strong>的IP（例如：192.168.1.56）后在电脑中打开终端（window使用<strong>xshell</strong>）连接到 Raspberry PI 板子的 ssh服务，例如：</p><blockquote><p>ssh <a href="mailto:pi@192.168.1.56" target="_blank" rel="noopener">pi@192.168.1.56</a></p></blockquote><p>然后输入密码：<strong>raspberry</strong>(系统默认)</p></li><li><p>4.4、ssh登陆完成后就可以对板子操作了！</p></li></ul><h2 id="5、设置wifi在板子断电或重启后自动连接网络"><a href="#5、设置wifi在板子断电或重启后自动连接网络" class="headerlink" title="5、设置wifi在板子断电或重启后自动连接网络"></a>5、设置wifi在板子断电或重启后自动连接网络</h2><ul><li><p>5.1、ssh登陆后执行</p><blockquote><p>sudo nano /etc/network/interfaces</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line"></span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line"></span><br><span class="line">allow-hotplug wlan0</span><br><span class="line"></span><br><span class="line">iface wlan0 inet dhcp</span><br><span class="line"></span><br><span class="line">wpa-ssid &quot;mywifi&quot;</span><br><span class="line"></span><br><span class="line">wpa-psk &quot;123456&quot;</span><br></pre></td></tr></table></figure></li></ul><p>保存退出</p><p>参考博文：<a href="https://blog.csdn.net/shaopengf/article/details/52411926" target="_blank" rel="noopener">Raspberry Pi树莓派无线网卡配置[多重方法备选]</a></p><h2 id="6、安全管理"><a href="#6、安全管理" class="headerlink" title="6、安全管理"></a>6、安全管理</h2><p>  建议修改默认账户密码如：<br>  用户：pi<br>  密码：raspberry</p><h2 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h2><ul><li><p>1、nano 编辑器 操作</p><blockquote><p>退出：<strong>control x</strong><br>保存并退出： <strong>control o</strong>  保存 <strong>enter</strong> q确认 <strong>control x</strong> 退出</p></blockquote></li><li><p>2、linxu c重启命令</p><blockquote><p>sudo reboot</p></blockquote></li></ul><p>参考博文：</p><ul><li>[1]、<a href="https://www.jianshu.com/p/f260967aefb1" target="_blank" rel="noopener">树莓派如何完全无头(无屏无网线无键盘鼠标)安装</a></li><li>[2]、<a href="https://blog.csdn.net/yoie01/article/details/45115067" target="_blank" rel="noopener">树莓派 - 修改pi账号密码,开启root账号</a></li><li>[3]、<a href="https://blog.csdn.net/shaopengf/article/details/52411926" target="_blank" rel="noopener">Raspberry Pi树莓派无线网卡配置[多重方法备选]</a></li><li>[4]、<a href="https://help.nextcloud.com/" target="_blank" rel="noopener">NextCloud论坛</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言： 这篇笔记记录不使用&lt;strong&gt;显示屏&lt;/strong&gt;和&lt;strong&gt;网线&lt;/strong&gt;来安装系统和配置环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、准备&quot;&gt;&lt;a href=&quot;#1、准备&quot; class=&quot;headerlink&quot; title=&quot;1、准备&quot;&gt;&lt;/a&gt;1、准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;树莓派3b+板子&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SD存储卡和卡套&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;电源线和插头&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;路由器（有wifi就行）&lt;/p&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Android手机搭建Linux环境</title>
    <link href="https://tanjunze.github.io/2018/05/18/Android%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BALinux%E7%8E%AF%E5%A2%83/"/>
    <id>https://tanjunze.github.io/2018/05/18/Android手机搭建Linux环境/</id>
    <published>2018-05-17T16:22:04.000Z</published>
    <updated>2018-10-26T05:50:02.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Termux介绍"><a href="#Termux介绍" class="headerlink" title="Termux介绍"></a><strong><a href="https://wiki.termux.com/wiki/Main_Page" target="_blank" rel="noopener">Termux</a></strong>介绍</h2><blockquote><p>Termux是Android，Chromebook和Fire OS的终端模拟器和Linux环境。<br><a id="more"></a><br>官网：<a href="https://wiki.termux.com" target="_blank" rel="noopener">https://wiki.termux.com</a><br>github：<a href="https://github.com/termux/termux-app" target="_blank" rel="noopener">https://github.com/termux/termux-app</a></p></blockquote><h2 id="1、配置Termux。"><a href="#1、配置Termux。" class="headerlink" title="1、配置Termux。"></a>1、配置Termux。</h2><h3 id="1-1-升级-apt-否则无法安装软件"><a href="#1-1-升级-apt-否则无法安装软件" class="headerlink" title="1.1 升级 apt(否则无法安装软件)"></a>1.1 升级 apt(否则无法安装软件)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure><h3 id="1-2-安装openssh"><a href="#1-2-安装openssh" class="headerlink" title="1.2 安装openssh"></a>1.2 安装openssh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt intall openssh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Termux介绍&quot;&gt;&lt;a href=&quot;#Termux介绍&quot; class=&quot;headerlink&quot; title=&quot;Termux介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&quot;https://wiki.termux.com/wiki/Main_Page&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Termux&lt;/a&gt;&lt;/strong&gt;介绍&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Termux是Android，Chromebook和Fire OS的终端模拟器和Linux环境。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用Android代理翻墙记录</title>
    <link href="https://tanjunze.github.io/2018/05/17/Mac%E4%BD%BF%E7%94%A8Android%E4%BB%A3%E7%90%86%E7%BF%BB%E5%A2%99%E8%AE%B0%E5%BD%95/"/>
    <id>https://tanjunze.github.io/2018/05/17/Mac使用Android代理翻墙记录/</id>
    <published>2018-05-17T15:29:09.000Z</published>
    <updated>2018-10-26T05:51:01.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、下载Proxy-Server代理软件"><a href="#1、下载Proxy-Server代理软件" class="headerlink" title="1、下载Proxy Server代理软件"></a>1、下载<strong><a href="https://www.apk20.com/apk/141135/" target="_blank" rel="noopener">Proxy Server</a></strong>代理软件</h2><h2 id="2、创建一个代理服务（Proxy-Server）"><a href="#2、创建一个代理服务（Proxy-Server）" class="headerlink" title="2、创建一个代理服务（Proxy Server）"></a>2、创建一个代理服务（Proxy Server）</h2><p><img src="/images/WX20180517-155059@2x.png" alt=""><br><a id="more"></a></p><h2 id="3、设置服务名和端口并返回后点击Start按钮启动服务"><a href="#3、设置服务名和端口并返回后点击Start按钮启动服务" class="headerlink" title="3、设置服务名和端口并返回后点击Start按钮启动服务"></a>3、设置服务名和端口并返回后点击<strong>Start</strong>按钮启动服务</h2><p><img src="/images/WX20180517-155034@2x.png" alt=""></p><h2 id="4、打开FireFox浏览器并配置网络代理"><a href="#4、打开FireFox浏览器并配置网络代理" class="headerlink" title="4、打开FireFox浏览器并配置网络代理"></a>4、打开<strong>FireFox</strong>浏览器并配置<strong>网络代理</strong></h2><p><img src="/images/WX20180517-155633@2x.png" alt=""></p><h2 id="5、设置启动代理服务手机的Ip和上面填写端口"><a href="#5、设置启动代理服务手机的Ip和上面填写端口" class="headerlink" title="5、设置启动代理服务手机的Ip和上面填写端口"></a>5、设置启动代理服务手机的<strong>Ip</strong>和上面填写端口</h2><p><img src="/images/WX20180517-155841@2x.png" alt=""></p><p>到此 FireFox 可以使用手机的代理服务，如果手机已经翻墙了，那么FireFox就可以实现翻墙。</p><p>同样可以为电脑设置代理配置，实现全局代理。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、下载Proxy-Server代理软件&quot;&gt;&lt;a href=&quot;#1、下载Proxy-Server代理软件&quot; class=&quot;headerlink&quot; title=&quot;1、下载Proxy Server代理软件&quot;&gt;&lt;/a&gt;1、下载&lt;strong&gt;&lt;a href=&quot;https://www.apk20.com/apk/141135/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Proxy Server&lt;/a&gt;&lt;/strong&gt;代理软件&lt;/h2&gt;&lt;h2 id=&quot;2、创建一个代理服务（Proxy-Server）&quot;&gt;&lt;a href=&quot;#2、创建一个代理服务（Proxy-Server）&quot; class=&quot;headerlink&quot; title=&quot;2、创建一个代理服务（Proxy Server）&quot;&gt;&lt;/a&gt;2、创建一个代理服务（Proxy Server）&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/WX20180517-155059@2x.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="代理" scheme="https://tanjunze.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>机器学习资料整理</title>
    <link href="https://tanjunze.github.io/2018/04/27/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/"/>
    <id>https://tanjunze.github.io/2018/04/27/机器学习资料整理/</id>
    <published>2018-04-27T15:36:40.000Z</published>
    <updated>2018-10-26T05:52:14.126Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/tanjunze/ML-Note/blob/master/document/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86.md" target="_blank" rel="noopener">我的机器学习资料</a>，为了方便查询同步到笔记中。</p><h2 id="机器学习资料"><a href="#机器学习资料" class="headerlink" title="机器学习资料"></a>机器学习资料</h2><h3 id="文档资料"><a href="#文档资料" class="headerlink" title="文档资料"></a>文档资料</h3><ul><li><p><a href="https://github.com/ChristosChristofidis/awesome-deep-learning" target="_blank" rel="noopener">深度学习资料-Github</a></p></li><li><p><a href="http://neuralnetworksanddeeplearning.com/" target="_blank" rel="noopener">神经网络和深度学习•Michael Nielsen</a></p></li><li><p><a href="https://www.gitbook.com/book/hit-scir/neural-networks-and-deep-learning-zh_cn/details" target="_blank" rel="noopener">神经网络和深度学习•Michael Nielsen（翻译）</a></p><a id="more"></a></li><li><p><a href="http://www.deeplearningbook.org/" target="_blank" rel="noopener">深度学习•Bengio</a></p></li><li><p><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">深度学习•Bengio（翻译）</a></p></li><li><p><a href="https://tensorflow.google.cn/" target="_blank" rel="noopener">Tensorflow官网-国内</a></p></li><li><p><a href="https://www.tensorflowers.cn/" target="_blank" rel="noopener">Tensorflow社区-国内</a></p></li><li><p><a href="https://devopen.club/ai/" target="_blank" rel="noopener">深度学习资料整理1-国内</a></p></li><li><p><a href="https://github.com/floodsung/Deep-Learning-Papers-Reading-Roadmap" target="_blank" rel="noopener">深度学习路线图</a></p></li><li><p><a href="http://colah.github.io/" target="_blank" rel="noopener">深度学习博文</a></p></li><li><p><a href="https://deeplearning4j.org/cn/" target="_blank" rel="noopener">深度学习Java框架</a></p></li></ul><h3 id="在线教育"><a href="#在线教育" class="headerlink" title="在线教育"></a>在线教育</h3><ul><li><p><a href="https://cn.udacity.com/course/deep-learning--ud730" target="_blank" rel="noopener">Google深度学习-Udacity课程</a></p></li><li><p><a href="https://developers.google.cn/machine-learning/crash-course/" target="_blank" rel="noopener">Google机器学习速成课程</a></p></li><li><p><a href="http://ufldl.stanford.edu/wiki/index.php/UFLDL%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">深度学习-Stanford-UFLDL</a></p></li><li><p><a href="http://deeplearning.stanford.edu/tutorial/" target="_blank" rel="noopener">深度学习-Stanford-Tutorial</a></p></li><li><p><a href="https://www.icourse163.org/learn/PKU-1002536002?tid=1002700003" target="_blank" rel="noopener">人工智能实践：Tensorflow笔记-慕课网</a></p></li><li><p><a href="https://morvanzhou.github.io/" target="_blank" rel="noopener">莫烦Python</a></p></li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><p>python</p></li><li><p>jupyter notebook</p></li></ul><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><ul><li><p><a href="https://tensorflow.google.cn/" target="_blank" rel="noopener">Tensorflow</a></p></li><li><p><a href="http://wiki.jikexueyuan.com/project/tensorflow-zh/" target="_blank" rel="noopener">Tensorflow（极客学院-翻译）</a></p></li><li><p><a href="http://tensorlayercn.readthedocs.io/zh/latest/" target="_blank" rel="noopener">TensorLayer-中文</a></p></li><li><p><a href="http://tensorlayer.readthedocs.io/en/latest/" target="_blank" rel="noopener">TensorLayer</a></p></li><li><p><a href="https://github.com/scikit-learn/scikit-learn" target="_blank" rel="noopener">scikit-learn</a></p></li><li><p><a href="http://sklearn.apachecn.org" target="_blank" rel="noopener">scikit-learn 翻译</a></p></li><li><p><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="noopener">caffe</a> 或 <a href="https://caffe2.ai/" target="_blank" rel="noopener">caffe2</a></p></li><li><p><a href="https://keras.io/" target="_blank" rel="noopener">Keras</a></p></li><li><p><a href="https://keras-cn.readthedocs.io/en/latest/" target="_blank" rel="noopener">keras 翻译</a></p></li><li><p><a href="http://deeplearning.net/software/theano/" target="_blank" rel="noopener">theano</a></p></li><li><p>…</p></li></ul><h2 id="其他文档"><a href="#其他文档" class="headerlink" title="其他文档"></a>其他文档</h2><ul><li><p><a href="https://deepmind.com/" target="_blank" rel="noopener">Deepmind</a></p></li><li><p><a href="http://cs231n.github.io/neural-networks-3/" target="_blank" rel="noopener">积卷神经网络-斯坦福</a></p></li><li><p><a href="https://github.com/llSourcell" target="_blank" rel="noopener">Siraj Raval-Gitub-Youtube</a></p></li><li><p><a href="https://cs231n.github.io/convolutional-networks/" target="_blank" rel="noopener">CS231n课程-积卷网络</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/22038289?refer=intelligentunit" target="_blank" rel="noopener">CS231n课程-积卷网络-中文翻译</a></p><h2 id="深度学习-开源项目"><a href="#深度学习-开源项目" class="headerlink" title="深度学习-开源项目"></a>深度学习-开源项目</h2></li></ul><ul><li><p><a href="https://github.com/CSTR-Edinburgh/merlin" target="_blank" rel="noopener">音频合成-Merlin</a></p></li><li><p><a href="https://github.com/ibab/tensorflow-wavenet" target="_blank" rel="noopener">音频合成-Wavenet</a></p></li><li><p><a href="https://github.com/udacity/deep-learning" target="_blank" rel="noopener">深度学习-Udacity-Code</a></p></li><li><p><a href="https://github.com/upul/Behavioral-Cloning" target="_blank" rel="noopener">无人驾驶-BehavioralCloning)</a></p></li><li><p><a href="https://github.com/udacity/self-driving-car-sim" target="_blank" rel="noopener">无人驾驶-udacity-sim</a></p></li><li><p><a href="https://blog.csdn.net/pengdali/article/details/79185757" target="_blank" rel="noopener">无人驾驶-CSDN博文</a></p></li></ul><h2 id="机器学习数据集"><a href="#机器学习数据集" class="headerlink" title="机器学习数据集"></a>机器学习数据集</h2><ul><li><a href="https://www.zhihu.com/question/63383992" target="_blank" rel="noopener">机器学习数据集1-知乎提问</a></li><li><a href="https://zhuanlan.zhihu.com/p/25138563" target="_blank" rel="noopener">机器学习数据集2-知乎博文</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/tanjunze/ML-Note/blob/master/document/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的机器学习资料&lt;/a&gt;，为了方便查询同步到笔记中。&lt;/p&gt;
&lt;h2 id=&quot;机器学习资料&quot;&gt;&lt;a href=&quot;#机器学习资料&quot; class=&quot;headerlink&quot; title=&quot;机器学习资料&quot;&gt;&lt;/a&gt;机器学习资料&lt;/h2&gt;&lt;h3 id=&quot;文档资料&quot;&gt;&lt;a href=&quot;#文档资料&quot; class=&quot;headerlink&quot; title=&quot;文档资料&quot;&gt;&lt;/a&gt;文档资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ChristosChristofidis/awesome-deep-learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深度学习资料-Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://neuralnetworksanddeeplearning.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;神经网络和深度学习•Michael Nielsen&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.gitbook.com/book/hit-scir/neural-networks-and-deep-learning-zh_cn/details&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;神经网络和深度学习•Michael Nielsen（翻译）&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="资料" scheme="https://tanjunze.github.io/categories/%E8%B5%84%E6%96%99/"/>
    
    
      <category term="机器学习" scheme="https://tanjunze.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="TensorFlow" scheme="https://tanjunze.github.io/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Hexo/GitHub Pages搭建个人博客</title>
    <link href="https://tanjunze.github.io/2018/04/27/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://tanjunze.github.io/2018/04/27/Hexo搭建个人博客/</id>
    <published>2018-04-27T13:53:59.000Z</published>
    <updated>2018-10-26T05:50:17.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好久没有在github pages 中更新笔记了，刚把旧的github仓库重新整理了。<br>在此记录一下，日后逐渐将旧笔记往这里迁移。<br><a id="more"></a></p><h2 id="1、配置环境"><a href="#1、配置环境" class="headerlink" title="1、配置环境"></a>1、配置环境</h2><p>Hexo官方文档: <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo wiki</a></p><p>首先安装:</p><ul><li><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a></li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></li></ul><p>再安装 Hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>到此Hexo安装完成，如果失败请参考官网，这里只记录简单流程。</p><h2 id="2、搭建站点"><a href="#2、搭建站点" class="headerlink" title="2、搭建站点"></a>2、搭建站点</h2><p>执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><h2 id="3、配置站点"><a href="#3、配置站点" class="headerlink" title="3、配置站点"></a>3、配置站点</h2><p>打开 <strong>folder/_config.yml</strong> 文件修改配置即可</p><h2 id="4、启动服务"><a href="#4、启动服务" class="headerlink" title="4、启动服务"></a>4、启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>简写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p><p>此时控制台中打印出 <strong><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></strong> ,再使用浏览器打开你就可以看到Hello world页面了。</p><h2 id="5、发布到github上"><a href="#5、发布到github上" class="headerlink" title="5、发布到github上"></a>5、发布到github上</h2><p>参考：<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">Hexo 部署</a></p><p><font color="red">注意：</font>首先你需要创建github账户，gtihub的仓库并push、pull仓库已验证你的github配置完成。</p><p>再创建一个仓库命名为<strong>&lt;你的用户名&gt;.github.io</strong>,如：</p><blockquote><p>tanjunze.github.io</p></blockquote><p>打开本地&lt;<strong>folder</strong>&gt; Hexo工程安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>打开本地<strong>folder/_config.yml</strong>找到<strong>Deployment</strong>选项，并修改：<br><img src="/images/2018_4_27_14_41.png" alt=""><br>其中将<strong>repo</strong>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:&lt;你的账户名&gt;/&lt;你的账户名&gt;.github.io.git</span><br></pre></td></tr></table></figure></p><p>执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>如果push成功，打开<strong>https://&lt;你的用户名&gt;.github.io</strong>,例如：</p><blockquote><p><a href="https://tanjunze.github.io/">https://tanjunze.github.io/</a></p></blockquote><p>恭喜你成功搭建了在Hexo + Gtihub Pages 的个人免费站点了。</p><p>参考网址：<a href="http://www.cnblogs.com/zhcncn/p/4097881.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhcncn/p/4097881.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;好久没有在github pages 中更新笔记了，刚把旧的github仓库重新整理了。&lt;br&gt;在此记录一下，日后逐渐将旧笔记往这里迁移。&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="其他" scheme="https://tanjunze.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
