<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tanjunze笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tanjunze.github.io/"/>
  <updated>2018-10-26T07:29:00.498Z</updated>
  <id>https://tanjunze.github.io/</id>
  
  <author>
    <name>tanjunze</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Blog中添加背景图和动效</title>
    <link href="https://tanjunze.github.io/2018/10/26/%E5%9C%A8Blog%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E5%9B%BE%E5%92%8C%E5%8A%A8%E6%95%88/"/>
    <id>https://tanjunze.github.io/2018/10/26/在Blog中添加背景图和动效/</id>
    <published>2018-10-26T14:53:36.000Z</published>
    <updated>2018-10-26T07:29:00.498Z</updated>
    
    <content type="html"><![CDATA[<p>记录一次在Blog中添加动态效果。</p><p>参考网址：<a href="https://www.wushile.top/article/201810212028.html" target="_blank" rel="noopener">网站动态背景（动态图）和静态背景（背景图片）的主题美化</a><br><a id="more"></a></p><h2 id="添加蜘蛛网动效"><a href="#添加蜘蛛网动效" class="headerlink" title="添加蜘蛛网动效"></a>添加蜘蛛网动效</h2><p>需要在html页面的<code>&lt;body&gt;&lt;/body&gt;</code>标签中添加下面的js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    ! <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">w, v, i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> w.getAttribute(v) || i</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(i)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> i = j(<span class="string">"script"</span>),</span><br><span class="line">                w = i.length,</span><br><span class="line">                v = i[w - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                l: w,</span><br><span class="line">                z: o(v, <span class="string">"zIndex"</span>, <span class="number">-1</span>), <span class="comment">//设置动态图显示的层位，一般-1就行，不用改</span></span><br><span class="line">                o: o(v, <span class="string">"opacity"</span>, <span class="number">0.5</span>), <span class="comment">//0.5显示的是线条的透明度，可以自行调整</span></span><br><span class="line">                c: o(v, <span class="string">"color"</span>, <span class="string">"0,0,0"</span>), <span class="comment">//设置线条的颜色，三个0,0,0分别代表RGB颜色数值，不知道的可以打开PS里的拾色器就可以看到RGB数值了</span></span><br><span class="line">                n: o(v, <span class="string">"count"</span>, <span class="number">120</span>), <span class="comment">//设置线条显示的数量，有密集恐惧症的朋友可别把数值设置太大哦</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            r = u.width = <span class="built_in">window</span>.innerWidth || <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth, n = u.height = <span class="built_in">window</span>.innerHeight || <span class="built_in">document</span>.documentElement.clientHeight || <span class="built_in">document</span>.body.clientHeight</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            e.clearRect(<span class="number">0</span>, <span class="number">0</span>, r, n);</span><br><span class="line">            <span class="keyword">var</span> w = [f].concat(t);</span><br><span class="line">            <span class="keyword">var</span> x, v, A, B, z, y;</span><br><span class="line">            t.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                i.x += i.xa, i.y += i.ya, i.xa *= i.x &gt; r || i.x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, i.ya *= i.y &gt; n || i.y &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>, e.fillRect(i.x - <span class="number">0.5</span>, i.y - <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; w.length; v++) &#123;</span><br><span class="line">                    x = w[v];</span><br><span class="line">                    <span class="keyword">if</span> (i !== x &amp;&amp; <span class="literal">null</span> !== x.x &amp;&amp; <span class="literal">null</span> !== x.y) &#123;</span><br><span class="line">                        B = i.x - x.x, z = i.y - x.y, y = B * B + z * z;</span><br><span class="line">                        y &lt; x.max &amp;&amp; (x === f &amp;&amp; y &gt;= x.max / <span class="number">2</span> &amp;&amp; (i.x -= <span class="number">0.03</span> * B, i.y -= <span class="number">0.03</span> * z), A = (x.max - y) / x.max, e.beginPath(), e.lineWidth = A / <span class="number">2</span>, e.strokeStyle = <span class="string">"rgba("</span> + s.c + <span class="string">","</span> + (A + <span class="number">0.2</span>) + <span class="string">")"</span>, e.moveTo(i.x, i.y), e.lineTo(x.x, x.y), e.stroke())</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                w.splice(w.indexOf(i), <span class="number">1</span>)</span><br><span class="line">            &#125;), m(b)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> u = <span class="built_in">document</span>.createElement(<span class="string">"canvas"</span>),</span><br><span class="line">            s = l(),</span><br><span class="line">            c = <span class="string">"c_n"</span> + s.l,</span><br><span class="line">            e = u.getContext(<span class="string">"2d"</span>),</span><br><span class="line">            r, n, m = <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.oRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame || <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">window</span>.setTimeout(i, <span class="number">1000</span> / <span class="number">45</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            a = <span class="built_in">Math</span>.random,</span><br><span class="line">            f = &#123;</span><br><span class="line">                x: <span class="literal">null</span>,</span><br><span class="line">                y: <span class="literal">null</span>,</span><br><span class="line">                max: <span class="number">20000</span></span><br><span class="line">            &#125;;</span><br><span class="line">        u.id = c;</span><br><span class="line">        u.style.cssText = <span class="string">"position:fixed;top:0;left:0;z-index:"</span> + s.z + <span class="string">";opacity:"</span> + s.o;</span><br><span class="line">        j(<span class="string">"body"</span>)[<span class="number">0</span>].appendChild(u);</span><br><span class="line">        k(), <span class="built_in">window</span>.onresize = k;</span><br><span class="line">        <span class="built_in">window</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">            i = i || <span class="built_in">window</span>.event, f.x = i.clientX, f.y = i.clientY</span><br><span class="line">        &#125;, <span class="built_in">window</span>.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            f.x = <span class="literal">null</span>, f.y = <span class="literal">null</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = [], p = <span class="number">0</span>; s.n &gt; p; p++) &#123;</span><br><span class="line">            <span class="keyword">var</span> h = a() * r,</span><br><span class="line">                g = a() * n,</span><br><span class="line">                q = <span class="number">2</span> * a() - <span class="number">1</span>,</span><br><span class="line">                d = <span class="number">2</span> * a() - <span class="number">1</span>;</span><br><span class="line">            t.push(&#123;</span><br><span class="line">                x: h,</span><br><span class="line">                y: g,</span><br><span class="line">                xa: q,</span><br><span class="line">                ya: d,</span><br><span class="line">                max: <span class="number">6000</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            b()</span><br><span class="line">        &#125;, <span class="number">100</span>)</span><br><span class="line">    &#125;();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加背景图"><a href="#添加背景图" class="headerlink" title="添加背景图"></a>添加背景图</h2><p>我的blog的样式有点差异，这记录一下。</p><p>在css样式文件中添加一下css:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>:auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(背景图路径) no-repeat fixed;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>注意：</strong>背景图片最好是：1920x1080</p><p>背景图片素材网：<a href="https://www.toptal.com/designers/subtlepatterns/" target="_blank" rel="noopener">Toptal</a></p><p>好了，通过以上2步操作就可以实现看的蜘蛛网效果</p><p>本blog使用<code>hexo</code> +<code>material-x</code> 搭建，<br><code>body 标签</code>文件在 <code>&lt;hexo blog path&gt;\themes\material-x\layout\layout.ejs</code><br><code>body CSS</code>文件在 <code>&lt;hexo blog path&gt;\themes\material-x\source\less\_base.less</code>中添加</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一次在Blog中添加动态效果。&lt;/p&gt;
&lt;p&gt;参考网址：&lt;a href=&quot;https://www.wushile.top/article/201810212028.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站动态背景（动态图）和静态背景（背景图片）的主题美化&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>私有Dart Package Sever</title>
    <link href="https://tanjunze.github.io/2018/10/12/Dart%20Package%20Server/"/>
    <id>https://tanjunze.github.io/2018/10/12/Dart Package Server/</id>
    <published>2018-10-12T00:00:00.000Z</published>
    <updated>2018-12-28T05:43:44.146Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建私有-Dart-Package-Server"><a href="#搭建私有-Dart-Package-Server" class="headerlink" title="搭建私有 Dart Package Server"></a>搭建私有 Dart Package Server</h2><h3 id="1、搭建Dart-Package-Server"><a href="#1、搭建Dart-Package-Server" class="headerlink" title="1、搭建Dart Package Server"></a>1、搭建Dart Package Server</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建私有-Dart-Package-Server&quot;&gt;&lt;a href=&quot;#搭建私有-Dart-Package-Server&quot; class=&quot;headerlink&quot; title=&quot;搭建私有 Dart Package Server&quot;&gt;&lt;/a&gt;搭建私有 Dart Pack
      
    
    </summary>
    
      <category term="前端" scheme="https://tanjunze.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Dart" scheme="https://tanjunze.github.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="https://tanjunze.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Docker命令笔记</title>
    <link href="https://tanjunze.github.io/2018/08/17/Docker%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://tanjunze.github.io/2018/08/17/Docker命令笔记/</id>
    <published>2018-08-17T10:15:12.000Z</published>
    <updated>2019-02-26T07:18:10.976Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Docker-安装"><a href="#一、Docker-安装" class="headerlink" title="一、Docker 安装"></a>一、Docker 安装</h2><p>本示例采用sh脚本安装,其他方式参考<a href="https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce" target="_blank" rel="noopener">Docker CE</a>官网。<br><a id="more"></a></p><ul><li><p>0、root用户登陆</p></li><li><p>1、升级yum包：</p><blockquote><p>$ sudo yum update</p></blockquote></li><li><p>2、（可选）卸载旧的Docker</p><blockquote><p>$ sudo yum erase docker docker-common docker-client docker-compose</p></blockquote></li><li><p>4、执行 Docker 安装脚本</p><blockquote><p>$ curl -fsSL <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a> | sh<br>或<br>$ wget -qO- <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a> | sh</p></blockquote></li><li><p>5、测试Docker</p><blockquote><p>$ docker info</p></blockquote></li><li><p>6、设置Docker开机启动</p><blockquote><p>$ sudo systemctl enable docker.service</p></blockquote></li><li><p>7、开启Docker服务</p><blockquote><p>$ sudo systemctl start docker</p></blockquote></li></ul><h2 id="二、Docker-Compose-安装"><a href="#二、Docker-Compose-安装" class="headerlink" title="二、Docker Compose 安装"></a>二、Docker Compose 安装</h2><ul><li><p>1、下载安装脚本</p><blockquote><p>$ curl -L <a href="https://github.com/docker/compose/releases/download/1.21.1/docker-compose-`uname" target="_blank" rel="noopener">https://github.com/docker/compose/releases/download/1.21.1/docker-compose-`uname</a> -s<code>-</code>uname -m` -o /usr/local/bin/docker-compose</p></blockquote></li><li><p>2、添加执行权限</p><blockquote><p>$ chmod +x /usr/local/bin/docker-compose</p></blockquote></li></ul><h2 id="三、Docker-常用命令"><a href="#三、Docker-常用命令" class="headerlink" title="三、Docker 常用命令"></a>三、Docker 常用命令</h2><ul><li><p>Docker 启动</p><blockquote><p>$ sudo systemctl start docker</p></blockquote></li><li><p>docker 开机启动</p><blockquote><p>$ sudo systemctl enable docker.service</p></blockquote></li><li><p>docker 当前容器开机启动</p><blockquote><p>$ docker run -d –restart=always </p></blockquote></li><li><p>容器终端</p><blockquote><p>$ docker exec -it &lt;容器id&gt; /bin/bash</p></blockquote></li><li><p>挂载目录</p><blockquote><p>$ docker run -d -v &lt;主机目录路径&gt;:&lt;容器目录路径 &gt;</p></blockquote></li><li><p>示例：</p><blockquote><p>$ docker run -d –restart=always -v /root/notebooks:/notebooks -it -p 8888:8888 tensorflow/tensorflow:latest-py3</p></blockquote></li><li><p>拉取镜像</p><blockquote><p>$ docker pull &lt;镜像tag&gt;</p></blockquote></li><li><p>查看运行中的容器</p><blockquote><p>$ docker ps</p></blockquote></li><li><p>查看所有容器</p><blockquote><p>$ docker ps -a</p></blockquote></li><li><p>关闭容器</p><blockquote><p>$ docker stop &lt;容器id&gt;</p></blockquote></li><li><p>强制删除容器</p><blockquote><p>$ docker rm -f &lt;容器id&gt;</p></blockquote></li><li><p>查看镜像文件</p><blockquote><p>$ docker images</p></blockquote></li><li><p>删除镜像文件</p><blockquote><p>docker rmi &lt;镜像id&gt;</p></blockquote></li></ul><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li>[1]、<a href="https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce" target="_blank" rel="noopener">Docker CE</a></li><li>[2]、<a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">Docker Compose</a></li><li>[3]、<a href="https://www.jianshu.com/p/adaa34795e64" target="_blank" rel="noopener">Docker 常用命令与操作</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Docker-安装&quot;&gt;&lt;a href=&quot;#一、Docker-安装&quot; class=&quot;headerlink&quot; title=&quot;一、Docker 安装&quot;&gt;&lt;/a&gt;一、Docker 安装&lt;/h2&gt;&lt;p&gt;本示例采用sh脚本安装,其他方式参考&lt;a href=&quot;https://docs.docker.com/install/linux/docker-ce/centos/#uninstall-docker-ce&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Docker CE&lt;/a&gt;官网。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://tanjunze.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://tanjunze.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 整理</title>
    <link href="https://tanjunze.github.io/2018/07/13/Flutter%E6%95%B4%E7%90%862/"/>
    <id>https://tanjunze.github.io/2018/07/13/Flutter整理2/</id>
    <published>2018-07-12T21:22:10.000Z</published>
    <updated>2019-02-26T07:17:26.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Dart-Package"><a href="#Dart-Package" class="headerlink" title="Dart Package"></a>Dart Package</h2><p><a href="https://www.dartlang.org/tools/pub" target="_blank" rel="noopener">https://www.dartlang.org/tools/pub</a></p><h4 id="创建dart-包"><a href="#创建dart-包" class="headerlink" title="创建dart 包"></a>创建dart 包</h4><p><a href="https://www.dartlang.org/guides/libraries/create-library-packages" target="_blank" rel="noopener">https://www.dartlang.org/guides/libraries/create-library-packages</a></p><h4 id="dart包依赖"><a href="#dart包依赖" class="headerlink" title="dart包依赖"></a>dart包依赖</h4><p><a href="https://www.dartlang.org/tools/pub/dependencies#path-packages" target="_blank" rel="noopener">https://www.dartlang.org/tools/pub/dependencies#path-packages</a></p><h5 id="依赖自建-pub-server"><a href="#依赖自建-pub-server" class="headerlink" title="依赖自建 pub server"></a>依赖自建 pub server</h5><p><a href="https://www.dartlang.org/tools/pub/dependencies#hosted-packages" target="_blank" rel="noopener">https://www.dartlang.org/tools/pub/dependencies#hosted-packages</a></p><p>自建私有服务器Github： <a href="https://github.com/dart-lang/pub_server" target="_blank" rel="noopener">pub server</a></p><h5 id="依赖Git仓库"><a href="#依赖Git仓库" class="headerlink" title="依赖Git仓库"></a>依赖Git仓库</h5><p><a href="https://www.dartlang.org/tools/pub/dependencies#git-packages" target="_blank" rel="noopener">https://www.dartlang.org/tools/pub/dependencies#git-packages</a></p><h5 id="本地仓库依赖"><a href="#本地仓库依赖" class="headerlink" title="本地仓库依赖"></a>本地仓库依赖</h5><p><a href="https://www.dartlang.org/tools/pub/dependencies#path-packages" target="_blank" rel="noopener">https://www.dartlang.org/tools/pub/dependencies#path-packages</a></p><h2 id="Flutter-Package"><a href="#Flutter-Package" class="headerlink" title="Flutter Package"></a>Flutter Package</h2><p><a href="https://flutter.io/docs/development/packages-and-plugins/using-packages" target="_blank" rel="noopener">https://flutter.io/docs/development/packages-and-plugins/using-packages</a></p><h4 id="开发Flutter包"><a href="#开发Flutter包" class="headerlink" title="开发Flutter包"></a>开发Flutter包</h4><p><a href="https://flutter.io/docs/development/packages-and-plugins/developing-packages" target="_blank" rel="noopener">https://flutter.io/docs/development/packages-and-plugins/developing-packages</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Dart-Package&quot;&gt;&lt;a href=&quot;#Dart-Package&quot; class=&quot;headerlink&quot; title=&quot;Dart Package&quot;&gt;&lt;/a&gt;Dart Package&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.dartlang.
      
    
    </summary>
    
      <category term="Flutter" scheme="https://tanjunze.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="https://tanjunze.github.io/tags/Flutter/"/>
    
      <category term="前端" scheme="https://tanjunze.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Android AIDL 原理</title>
    <link href="https://tanjunze.github.io/2018/06/18/Android%20AIDL%20%E5%8E%9F%E7%90%86/"/>
    <id>https://tanjunze.github.io/2018/06/18/Android AIDL 原理/</id>
    <published>2018-06-17T16:22:04.000Z</published>
    <updated>2019-02-22T05:40:53.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-AIDL-原理"><a href="#Android-AIDL-原理" class="headerlink" title="Android  AIDL 原理"></a>Android  AIDL 原理</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-AIDL-原理&quot;&gt;&lt;a href=&quot;#Android-AIDL-原理&quot; class=&quot;headerlink&quot; title=&quot;Android  AIDL 原理&quot;&gt;&lt;/a&gt;Android  AIDL 原理&lt;/h1&gt;
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 整理</title>
    <link href="https://tanjunze.github.io/2018/06/05/Flutter%E6%95%B4%E7%90%86/"/>
    <id>https://tanjunze.github.io/2018/06/05/Flutter整理/</id>
    <published>2018-06-04T21:00:05.000Z</published>
    <updated>2019-02-26T07:18:02.078Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p><strong>Flutter 官网</strong></p><p><code>https://flutter.io/</code></p><p><strong>Flutter 中文</strong></p><p><strong>官方：</strong><code>https://flutter-io.cn/</code> </p><p><strong>社区：</strong><code>https://flutterchina.club/</code> </p><p><strong>Dart官网</strong></p><p><code>https://www.dartlang.org/</code></p><p><strong>Dart包管理</strong></p><p><code>https://pub.dartlang.org/</code></p><p><code>https://pub.flutter-io.cn/</code></p><p><strong>Flutter 桌面版</strong></p><p><strong>社区：</strong><code>https://github.com/google/flutter-desktop-embedding</code></p><p><strong>其他：</strong><code>https://feather-apps.com/</code></p><p><strong>codelabs中文：</strong><code>https://codelabs.flutter-io.cn/</code></p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p><strong>json_serializable</strong></p><p><code>https://caijinglong.github.io/json2dart/index_ch.html</code></p><p><strong>动画</strong></p><p><code>https://www.2dimensions.com/runtimes</code></p><h3 id="博文"><a href="#博文" class="headerlink" title="博文"></a>博文</h3><p><strong>闲鱼</strong></p><p><code>https://www.yuque.com/xytech/flutter</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Flutter 官网&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://flutter.io/&lt;/code&gt;&lt;/p
      
    
    </summary>
    
      <category term="Flutter" scheme="https://tanjunze.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="https://tanjunze.github.io/tags/Flutter/"/>
    
      <category term="前端" scheme="https://tanjunze.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>linux笔记之ssh</title>
    <link href="https://tanjunze.github.io/2018/05/23/linux%E7%AC%94%E8%AE%B0%E4%B9%8Bssh/"/>
    <id>https://tanjunze.github.io/2018/05/23/linux笔记之ssh/</id>
    <published>2018-05-23T10:08:33.000Z</published>
    <updated>2019-02-26T06:30:22.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、ssh自动脚本登陆"><a href="#1、ssh自动脚本登陆" class="headerlink" title="1、ssh自动脚本登陆"></a>1、ssh自动脚本登陆</h2><ul><li><p>1.1、创建shell脚本，如脚本 login.sh内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect                   </span></span><br><span class="line"></span><br><span class="line">set timeout 3                     </span><br><span class="line">spawn ssh user@192.168.3.24       </span><br><span class="line">expect "*password*"                 </span><br><span class="line">send "youPassword\r"   </span><br><span class="line">interact</span><br></pre></td></tr></table></figure><a id="more"></a></li><li>1.2、为自动登陆脚本添加执行权限，如：<blockquote><p>$ sudo chmod +x ./login.sh</p></blockquote></li><li><p>1.3、（可选）为脚本添加别名<br> 打开用户目录下的.bash_profile文件</p><blockquote><p>$ vim ~/.bash_profile</p></blockquote><p>添加 <strong>别名（如：SSLogin）</strong>和 <strong>脚本路径（如：/Users/youAccount/home/login.sh）</strong>保存并退出， 如：</p><blockquote><p>$ alias SSLogin=’/Users/youAccount/home/login.sh’</p></blockquote><p>刷新环境变量</p><blockquote><p>$ source ~/.bash_profile</p></blockquote><p>在终端中直接使用别名 <strong>SSLogin</strong>去登陆了,如</p><blockquote><p>$ SSLogin</p></blockquote></li></ul><h2 id="2、ssh免密码登陆"><a href="#2、ssh免密码登陆" class="headerlink" title="2、ssh免密码登陆"></a>2、ssh免密码登陆</h2><p>   参考博文：<a href="https://www.jianshu.com/p/03effb53705c" target="_blank" rel="noopener">SSH免密码登陆和免ip连接</a></p><p>参考网址：<br>   [1]、<a href="http://xstarcd.github.io/wiki/shell/expect_handbook.html" target="_blank" rel="noopener">expect教程中文版</a><br>   [2]、<a href="https://www.cnblogs.com/zhenbianshu/p/5867440.html" target="_blank" rel="noopener">shell实现SSH自动登陆</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、ssh自动脚本登陆&quot;&gt;&lt;a href=&quot;#1、ssh自动脚本登陆&quot; class=&quot;headerlink&quot; title=&quot;1、ssh自动脚本登陆&quot;&gt;&lt;/a&gt;1、ssh自动脚本登陆&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.1、创建shell脚本，如脚本 login.sh内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;!/usr/bin/expect                   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set timeout 3                     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spawn ssh user@192.168.3.24       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;expect &quot;*password*&quot;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;send &quot;youPassword\r&quot;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;interact&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://tanjunze.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://tanjunze.github.io/tags/Linux/"/>
    
      <category term="SSH" scheme="https://tanjunze.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>MAC命令</title>
    <link href="https://tanjunze.github.io/2018/05/22/Mac%20%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
    <id>https://tanjunze.github.io/2018/05/22/Mac 命令收集/</id>
    <published>2018-05-22T15:56:43.000Z</published>
    <updated>2019-02-26T06:29:55.432Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mac-命令"><a href="#Mac-命令" class="headerlink" title="Mac 命令"></a>Mac 命令</h2><h3 id="打开关闭隐藏文件及目录"><a href="#打开关闭隐藏文件及目录" class="headerlink" title="打开关闭隐藏文件及目录"></a>打开关闭隐藏文件及目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shift   commond  .</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Mac-命令&quot;&gt;&lt;a href=&quot;#Mac-命令&quot; class=&quot;headerlink&quot; title=&quot;Mac 命令&quot;&gt;&lt;/a&gt;Mac 命令&lt;/h2&gt;&lt;h3 id=&quot;打开关闭隐藏文件及目录&quot;&gt;&lt;a href=&quot;#打开关闭隐藏文件及目录&quot; class=&quot;header
      
    
    </summary>
    
      <category term="Linux" scheme="https://tanjunze.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://tanjunze.github.io/tags/Linux/"/>
    
      <category term="SSH" scheme="https://tanjunze.github.io/tags/SSH/"/>
    
      <category term="Mac" scheme="https://tanjunze.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之自动挂载nfts移动硬盘</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BDnfts%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之自动挂载nfts移动硬盘/</id>
    <published>2018-05-21T14:52:53.000Z</published>
    <updated>2018-10-26T05:52:43.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0、插入ntfs的存储设备如：移动硬盘"><a href="#0、插入ntfs的存储设备如：移动硬盘" class="headerlink" title="0、插入ntfs的存储设备如：移动硬盘"></a>0、插入ntfs的存储设备如：移动硬盘</h2><h2 id="1、安装ntfs-3g"><a href="#1、安装ntfs-3g" class="headerlink" title="1、安装ntfs-3g"></a>1、安装<a href="https://en.wikipedia.org/wiki/NTFS-3G" target="_blank" rel="noopener">ntfs-3g</a></h2><blockquote><p>$ sudo apt-get install ntfs-3g</p></blockquote><h2 id="2、查询外接存储目录权限和UUID"><a href="#2、查询外接存储目录权限和UUID" class="headerlink" title="2、查询外接存储目录权限和UUID"></a>2、查询外接存储目录权限和UUID</h2><blockquote><p>$ ls -l /dev/disk/by-uuid/</p></blockquote><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &gt; ../../sda1</span><br></pre></td></tr></table></figure></p><p>记下UUID - &gt; 0AC4D607C4D5F543的值<br><a id="more"></a></p><h2 id="3、创建挂载点并赋权"><a href="#3、创建挂载点并赋权" class="headerlink" title="3、创建挂载点并赋权"></a>3、创建挂载点并赋权</h2><blockquote><p>$ sudo mkdir /mnt/usbdrive</p></blockquote><blockquote><p>$ sudo chmod 770 /mnt/usbdrive</p></blockquote><h2 id="4、使用id命令获取uid，pi用户和组的gid（通常为1000）"><a href="#4、使用id命令获取uid，pi用户和组的gid（通常为1000）" class="headerlink" title="4、使用id命令获取uid，pi用户和组的gid（通常为1000）"></a>4、使用id命令获取uid，pi用户和组的gid（通常为1000）</h2><blockquote><p>$ id -u pi</p></blockquote><blockquote><p>$ id -g pi</p></blockquote><h2 id="5、挂载，然后检查-mnt-usbdrive是否可以访问它"><a href="#5、挂载，然后检查-mnt-usbdrive是否可以访问它" class="headerlink" title="5、挂载，然后检查/mnt/usbdrive是否可以访问它"></a>5、挂载，然后检查<strong>/mnt/usbdrive</strong>是否可以访问它</h2><blockquote><p>$ sudo mount -t ntfs-3g -o uid=1000，gid=1000，umask=007 /dev/sda1/mnt/usbdrive</p></blockquote><h2 id="6、备份驱动目录并插入新的挂载点"><a href="#6、备份驱动目录并插入新的挂载点" class="headerlink" title="6、备份驱动目录并插入新的挂载点"></a>6、备份驱动目录并插入新的挂载点</h2><p>备份：</p><blockquote><p>$ sudo cp /etc/fstab /etc/fstab.backup </p></blockquote><p>打开驱动目录文件并在最后一行写入新的驱动信息</p><blockquote><p>$ sudo nano /etc/fstab</p></blockquote><p>在fstab文件中添加安装信息（用您自己的UUID，uid，gid替换）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UUID=0AC4D607C4D5F543 /mnt/usbdrive ntfs-3g uid=1000，gid=1000，umask=007 0 0</span><br></pre></td></tr></table></figure></p><h2 id="7、重新启动树莓派"><a href="#7、重新启动树莓派" class="headerlink" title="7、重新启动树莓派"></a>7、重新启动树莓派</h2><blockquote><p>sudo reboot</p></blockquote><h2 id="8、作为NextCloud的存储设备"><a href="#8、作为NextCloud的存储设备" class="headerlink" title="8、作为NextCloud的存储设备"></a>8、作为NextCloud的存储设备</h2><p>在/mnt/usbdrive驱动（移动硬盘）上配置NextCloud的数据目录，则它应该对www-data用户拥有770权限。您可以简单地将用户www-data添加到pi组中，因为它已经拥有770的权限，如上面在fstab中设置的那样。</p><blockquote><p>$ sudo usermod -a -G pi www-data</p></blockquote><p>参考网址：<br>  [1]、<a href="http://www.techjawab.com/2013/06/how-to-setup-mount-auto-mount-usb-hard.html" target="_blank" rel="noopener">How to setup mount / auto-mount USB Hard Drive on Raspberry Pi</a><br>  [2]、<a href="http://ja.cques.ca/blog/2013/09/25/ntfs-external-hd-with-owncloud-on-the-raspberry-pi/" target="_blank" rel="noopener">NTFS External HD With ownCloud on the Raspberry Pi</a><br>  [3]、<a href="https://raspberrypi.stackexchange.com/questions/10236/ntfs-3g-hdd-0770-and-0777-permissions-owncloud" target="_blank" rel="noopener">NTFS-3g HDD 0770 and 0777 permissions Owncloud</a><br>  [4]、<a href="https://www.liaronce.win/archives/776" target="_blank" rel="noopener">通过 NextCloudPi 为树莓派可视化搭建 NextCloud 网盘（并折腾无语的 NTFS 移动硬盘）</a><br>  [5]、<a href="http://shumeipai.nxez.com/2013/09/08/raspberry-pi-to-mount-the-removable-hard-disk.html" target="_blank" rel="noopener">给树莓派挂载移动硬盘或U盘</a><br>  [6]、<a href="http://www.freehao123.com/raspberry-pi-nas/" target="_blank" rel="noopener">树莓派Raspberry Pi 打造低成本NAS存储家庭服务器的十个问题整理</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0、插入ntfs的存储设备如：移动硬盘&quot;&gt;&lt;a href=&quot;#0、插入ntfs的存储设备如：移动硬盘&quot; class=&quot;headerlink&quot; title=&quot;0、插入ntfs的存储设备如：移动硬盘&quot;&gt;&lt;/a&gt;0、插入ntfs的存储设备如：移动硬盘&lt;/h2&gt;&lt;h2 id=&quot;1、安装ntfs-3g&quot;&gt;&lt;a href=&quot;#1、安装ntfs-3g&quot; class=&quot;headerlink&quot; title=&quot;1、安装ntfs-3g&quot;&gt;&lt;/a&gt;1、安装&lt;a href=&quot;https://en.wikipedia.org/wiki/NTFS-3G&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ntfs-3g&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$ sudo apt-get install ntfs-3g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2、查询外接存储目录权限和UUID&quot;&gt;&lt;a href=&quot;#2、查询外接存储目录权限和UUID&quot; class=&quot;headerlink&quot; title=&quot;2、查询外接存储目录权限和UUID&quot;&gt;&lt;/a&gt;2、查询外接存储目录权限和UUID&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$ ls -l /dev/disk/by-uuid/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root 10 Jan 1 1970 0AC4D607C4D5F543 - &amp;gt; ../../sda1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;记下UUID - &amp;gt; 0AC4D607C4D5F543的值&lt;br&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之NextCloud安装</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8BNextCloud%E5%AE%89%E8%A3%85/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之NextCloud安装/</id>
    <published>2018-05-21T13:32:27.000Z</published>
    <updated>2018-10-26T05:52:34.453Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/nextcloud/server" target="_blank" rel="noopener">Nextcloud</a> 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。</p></blockquote><h2 id="1、NextCloud简单安装的三种方式总结"><a href="#1、NextCloud简单安装的三种方式总结" class="headerlink" title="1、NextCloud简单安装的三种方式总结"></a>1、NextCloud简单安装的三种方式总结</h2><ul><li><p>1.1、使用 docker 安装：<br>文档：<a href="https://github.com/nextcloud/docker" target="_blank" rel="noopener">https://github.com/nextcloud/docker</a></p></li><li><p>1.2、使用 nextcloud-snap 安装<br>文档：<a href="https://github.com/nextcloud/nextcloud-snap" target="_blank" rel="noopener">https://github.com/nextcloud/nextcloud-snap</a></p></li><li><p>1.3 使用VM安装<br>文档：<a href="https://github.com/nextcloud/vm" target="_blank" rel="noopener">https://github.com/nextcloud/vm</a></p><a id="more"></a><p>NextCloud安装官方文档：<a href="https://nextcloud.com/install/#instructions-server" target="_blank" rel="noopener">https://nextcloud.com/install/#instructions-server</a></p></li></ul><h2 id="2、NextCloud在树莓派上的安装方式"><a href="#2、NextCloud在树莓派上的安装方式" class="headerlink" title="2、NextCloud在树莓派上的安装方式"></a>2、NextCloud在树莓派上的安装方式</h2><p>NextCloudPI官方文档：<a href="https://github.com/nextcloud/nextcloudpi" target="_blank" rel="noopener">https://github.com/nextcloud/nextcloudpi</a></p><ul><li><p>2.1、自己构建环境和部署NextCloud<br>博文：<a href="http://unixetc.co.uk/2016/11/20/simple-nextcloud-installation-on-raspberry-pi/" target="_blank" rel="noopener">在Raspberry Pi上简单安装Nextcloud</a></p></li><li><p>2.1、自动脚本构建NextCloud<br>博文：<a href="http://unixetc.co.uk/2017/11/25/automatic-nextcloud-installation-on-raspberry-pi/" target="_blank" rel="noopener">在Raspberry Pi上自动安装Nextcloud</a></p></li><li><p>2.3、刷NextCloudPi镜像文件<br>博文：<a href="https://wzfou.com/raspberry-nextcloud/" target="_blank" rel="noopener">树莓派Raspberry Pi安装NextCloud教程-自建家庭私有云局域网共享</a></p></li><li><p>2.4 使用 docker 安装：<br>文档：<a href="https://github.com/nextcloud/nextcloudpi" target="_blank" rel="noopener">NextCloudPI Github</a></p></li></ul><h2 id="3、NextCloud快速安装笔记"><a href="#3、NextCloud快速安装笔记" class="headerlink" title="3、NextCloud快速安装笔记"></a>3、NextCloud快速安装笔记</h2><p>  这里记录我目前使用的安装方式 <strong>步骤2.1</strong>中关键命令，方便查阅：</p><ul><li><p>3.1、下载<a href="https://en.wikipedia.org/wiki/Ansible_(software" target="_blank" rel="noopener">Ansible</a></p><blockquote><p>$ sudo apt-get -y install ansible</p></blockquote></li><li><p>3.2、下载自动构建脚本</p><blockquote><p>$ wget <a href="https://raw.githubusercontent.com/webtaster/Nextcloud/master/build_nextcloud.yml" target="_blank" rel="noopener">https://raw.githubusercontent.com/webtaster/Nextcloud/master/build_nextcloud.yml</a></p></blockquote></li><li><p>3.3、(可选)使用 <strong>SQLite</strong>安装和配置Nextcloud</p><blockquote><p>$ sudo date ; ansible-playbook -s -c local -i “localhost,” build_nextcloud.yml</p></blockquote></li><li><p>3.4、(可选)使用 <strong>MySQL</strong>安装和配置Nextcloud</p><blockquote><p>$ date ; ansible-playbook -s -c local -i “localhost,” –extra-vars “DATABASE=mysql MYSQL_ROOT_PASSWORD=qwerty NCUSER_PASSWORD=raindrop” build_nextcloud.yml</p></blockquote><p>上面指令中MySQL用户密码（可以自定义）：<br>用户：root     密码：qwerty         对应命令：<strong>MYSQL_ROOT_PASSWORD = qwerty</strong><br>用户：ncuser   密码：rainindrop     对应命令：<strong>NCUSER_PASSWORD = raindrop</strong></p></li><li><p>3.5、初始化配置NextCloud<br>在浏览器中打开</p><blockquote><p>http://树莓派的IP地址/nextcloud</p></blockquote><p>例如：</p><blockquote><p><a href="http://192.168.1.99/nextcloud" target="_blank" rel="noopener">http://192.168.1.99/nextcloud</a></p></blockquote><p>然后根据NextCloud提示配置NextCloud就可以了。</p></li><li><p>3.6、(可选)配置树莓派目录读写权限<br>如果在浏览器中配置NextCloud过程中错误提示“无法创建var/www/html/nextcloud/data“时，ssh等登陆树莓派并赋予<strong>775权限</strong></p><blockquote><p>$ sudo chmod -R 775 /var/www/html/nextcloud/</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nextcloud/server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nextcloud&lt;/a&gt; 是一个免费专业的私有云存储网盘「开源」项目，可以让你简单快速地在个人/公司电脑、服务器甚至是树莓派等设备上架设一套属于自己或团队专属的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、NextCloud简单安装的三种方式总结&quot;&gt;&lt;a href=&quot;#1、NextCloud简单安装的三种方式总结&quot; class=&quot;headerlink&quot; title=&quot;1、NextCloud简单安装的三种方式总结&quot;&gt;&lt;/a&gt;1、NextCloud简单安装的三种方式总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.1、使用 docker 安装：&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/docker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/docker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.2、使用 nextcloud-snap 安装&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/nextcloud-snap&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/nextcloud-snap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.3 使用VM安装&lt;br&gt;文档：&lt;a href=&quot;https://github.com/nextcloud/vm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/nextcloud/vm&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派笔记之安装配置</title>
    <link href="https://tanjunze.github.io/2018/05/21/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>https://tanjunze.github.io/2018/05/21/树莓派笔记之安装配置/</id>
    <published>2018-05-21T09:38:43.000Z</published>
    <updated>2018-10-26T05:52:39.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言： 这篇笔记记录不使用<strong>显示屏</strong>和<strong>网线</strong>来安装系统和配置环境</p></blockquote><h2 id="1、准备"><a href="#1、准备" class="headerlink" title="1、准备"></a>1、准备</h2><ul><li><p>树莓派3b+板子</p></li><li><p>SD存储卡和卡套</p></li><li><p>电源线和插头</p></li><li><p>路由器（有wifi就行）</p><a id="more"></a><h2 id="2、刻录系统"><a href="#2、刻录系统" class="headerlink" title="2、刻录系统"></a>2、刻录系统</h2></li><li><p>2.1、到<strong><a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">树莓派官网</a></strong>下载系统系统文件并解压</p></li><li><p>2.2、下载安装镜像刻录软件如：Mac版<strong><a href="http://mac.softpedia.com/get/Utilities/Etcher.shtml" target="_blank" rel="noopener">Etcher</a></strong>和window版win32diskimager等</p></li><li><p>2.3、插入SD卡到电脑并打开刻录软件如：目前使用的Etcher（示例）<br><img src="/images/WX20180521-100451@2x.png" alt=""></p><ul><li><p>2.3.1、选择（<strong>Select image</strong>）从官网下载并解压后的<strong> NOOBS </strong>或<strong> RASPBIAN </strong> 镜像文件（<strong> xxx.img </strong>格式）</p></li><li><p>2.3.2、选择SD卡 (<strong>Select drive</strong>)</p></li><li><p>2.3.3 开始刻录镜像（<strong>Flash</strong>）并等待及几分钟至镜像刻录完成</p></li></ul></li></ul><h2 id="3、配置wifi和ssh"><a href="#3、配置wifi和ssh" class="headerlink" title="3、配置wifi和ssh"></a>3、配置wifi和ssh</h2><p>因为没有使用网线所以要在安装前配置好wifi和ssh，让板子在安装完系统后自动连接wifi并开启ssh。</p><ul><li><p>3.1、配置wifi</p><p>打开SD卡，创建文件并写入保存：<br>文件名：<strong>wpa_supplicant.conf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;mywifi&quot;        #ssid（wifi名）</span><br><span class="line">psk=&quot;123456&quot;          #password（wifi密码）</span><br><span class="line">key_mgmt=WPA-PSK     #wifi加密方式</span><br><span class="line">priority=1           #优先级</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>3.2、配置ssh</p><p>打开SD卡，创建文件ssh文件(不写入内容，无后缀)<br>文件名：<strong>ssh</strong></p></li></ul><h2 id="4、安装系统并ssh登陆"><a href="#4、安装系统并ssh登陆" class="headerlink" title="4、安装系统并ssh登陆"></a>4、安装系统并ssh登陆</h2><ul><li><p>4.1、将SD卡插入板子中并上电启动，如果<strong>绿灯不在闪烁</strong>且<strong>红灯常亮</strong>，那么系统安装并启动成功。</p></li><li><p>4.2、进入路由器查看名称为 <strong>raspberry</strong>设备的 <strong>IP地址</strong>，例如：设备：raspberry ，IP地址：192.168.1.56。<br>如果没有查看到 <strong>raspberry</strong>设备和IP，请确认 <strong>步骤3.1</strong> 中文件 <strong>wpa_supplicant.conf</strong>是否正确配置wifi名称和密码。如果错误请重新刻录系统并配置wifi。</p></li><li><p>4.3、确认到 <strong>raspberry</strong>的IP（例如：192.168.1.56）后在电脑中打开终端（window使用<strong>xshell</strong>）连接到 Raspberry PI 板子的 ssh服务，例如：</p><blockquote><p>ssh <a href="mailto:pi@192.168.1.56" target="_blank" rel="noopener">pi@192.168.1.56</a></p></blockquote><p>然后输入密码：<strong>raspberry</strong>(系统默认)</p></li><li><p>4.4、ssh登陆完成后就可以对板子操作了！</p></li></ul><h2 id="5、设置wifi在板子断电或重启后自动连接网络"><a href="#5、设置wifi在板子断电或重启后自动连接网络" class="headerlink" title="5、设置wifi在板子断电或重启后自动连接网络"></a>5、设置wifi在板子断电或重启后自动连接网络</h2><ul><li><p>5.1、ssh登陆后执行</p><blockquote><p>sudo nano /etc/network/interfaces</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line"></span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line"></span><br><span class="line">allow-hotplug wlan0</span><br><span class="line"></span><br><span class="line">iface wlan0 inet dhcp</span><br><span class="line"></span><br><span class="line">wpa-ssid &quot;mywifi&quot;</span><br><span class="line"></span><br><span class="line">wpa-psk &quot;123456&quot;</span><br></pre></td></tr></table></figure></li></ul><p>保存退出</p><p>参考博文：<a href="https://blog.csdn.net/shaopengf/article/details/52411926" target="_blank" rel="noopener">Raspberry Pi树莓派无线网卡配置[多重方法备选]</a></p><h2 id="6、安全管理"><a href="#6、安全管理" class="headerlink" title="6、安全管理"></a>6、安全管理</h2><p>  建议修改默认账户密码如：<br>  用户：pi<br>  密码：raspberry</p><h2 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h2><ul><li><p>1、nano 编辑器 操作</p><blockquote><p>退出：<strong>control x</strong><br>保存并退出： <strong>control o</strong>  保存 <strong>enter</strong> q确认 <strong>control x</strong> 退出</p></blockquote></li><li><p>2、linxu c重启命令</p><blockquote><p>sudo reboot</p></blockquote></li></ul><p>参考博文：</p><ul><li>[1]、<a href="https://www.jianshu.com/p/f260967aefb1" target="_blank" rel="noopener">树莓派如何完全无头(无屏无网线无键盘鼠标)安装</a></li><li>[2]、<a href="https://blog.csdn.net/yoie01/article/details/45115067" target="_blank" rel="noopener">树莓派 - 修改pi账号密码,开启root账号</a></li><li>[3]、<a href="https://blog.csdn.net/shaopengf/article/details/52411926" target="_blank" rel="noopener">Raspberry Pi树莓派无线网卡配置[多重方法备选]</a></li><li>[4]、<a href="https://help.nextcloud.com/" target="_blank" rel="noopener">NextCloud论坛</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言： 这篇笔记记录不使用&lt;strong&gt;显示屏&lt;/strong&gt;和&lt;strong&gt;网线&lt;/strong&gt;来安装系统和配置环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1、准备&quot;&gt;&lt;a href=&quot;#1、准备&quot; class=&quot;headerlink&quot; title=&quot;1、准备&quot;&gt;&lt;/a&gt;1、准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;树莓派3b+板子&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SD存储卡和卡套&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;电源线和插头&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;路由器（有wifi就行）&lt;/p&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://tanjunze.github.io/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://tanjunze.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用Android代理翻墙记录</title>
    <link href="https://tanjunze.github.io/2018/05/17/Mac%E4%BD%BF%E7%94%A8Android%E4%BB%A3%E7%90%86%E7%BF%BB%E5%A2%99%E8%AE%B0%E5%BD%95/"/>
    <id>https://tanjunze.github.io/2018/05/17/Mac使用Android代理翻墙记录/</id>
    <published>2018-05-17T15:29:09.000Z</published>
    <updated>2018-10-26T05:51:01.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、下载Proxy-Server代理软件"><a href="#1、下载Proxy-Server代理软件" class="headerlink" title="1、下载Proxy Server代理软件"></a>1、下载<strong><a href="https://www.apk20.com/apk/141135/" target="_blank" rel="noopener">Proxy Server</a></strong>代理软件</h2><h2 id="2、创建一个代理服务（Proxy-Server）"><a href="#2、创建一个代理服务（Proxy-Server）" class="headerlink" title="2、创建一个代理服务（Proxy Server）"></a>2、创建一个代理服务（Proxy Server）</h2><p><img src="/images/WX20180517-155059@2x.png" alt=""><br><a id="more"></a></p><h2 id="3、设置服务名和端口并返回后点击Start按钮启动服务"><a href="#3、设置服务名和端口并返回后点击Start按钮启动服务" class="headerlink" title="3、设置服务名和端口并返回后点击Start按钮启动服务"></a>3、设置服务名和端口并返回后点击<strong>Start</strong>按钮启动服务</h2><p><img src="/images/WX20180517-155034@2x.png" alt=""></p><h2 id="4、打开FireFox浏览器并配置网络代理"><a href="#4、打开FireFox浏览器并配置网络代理" class="headerlink" title="4、打开FireFox浏览器并配置网络代理"></a>4、打开<strong>FireFox</strong>浏览器并配置<strong>网络代理</strong></h2><p><img src="/images/WX20180517-155633@2x.png" alt=""></p><h2 id="5、设置启动代理服务手机的Ip和上面填写端口"><a href="#5、设置启动代理服务手机的Ip和上面填写端口" class="headerlink" title="5、设置启动代理服务手机的Ip和上面填写端口"></a>5、设置启动代理服务手机的<strong>Ip</strong>和上面填写端口</h2><p><img src="/images/WX20180517-155841@2x.png" alt=""></p><p>到此 FireFox 可以使用手机的代理服务，如果手机已经翻墙了，那么FireFox就可以实现翻墙。</p><p>同样可以为电脑设置代理配置，实现全局代理。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、下载Proxy-Server代理软件&quot;&gt;&lt;a href=&quot;#1、下载Proxy-Server代理软件&quot; class=&quot;headerlink&quot; title=&quot;1、下载Proxy Server代理软件&quot;&gt;&lt;/a&gt;1、下载&lt;strong&gt;&lt;a href=&quot;https://www.apk20.com/apk/141135/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Proxy Server&lt;/a&gt;&lt;/strong&gt;代理软件&lt;/h2&gt;&lt;h2 id=&quot;2、创建一个代理服务（Proxy-Server）&quot;&gt;&lt;a href=&quot;#2、创建一个代理服务（Proxy-Server）&quot; class=&quot;headerlink&quot; title=&quot;2、创建一个代理服务（Proxy Server）&quot;&gt;&lt;/a&gt;2、创建一个代理服务（Proxy Server）&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/WX20180517-155059@2x.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="代理" scheme="https://tanjunze.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>机器学习资料整理</title>
    <link href="https://tanjunze.github.io/2018/04/27/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/"/>
    <id>https://tanjunze.github.io/2018/04/27/机器学习资料整理/</id>
    <published>2018-04-27T15:36:40.000Z</published>
    <updated>2018-10-26T05:52:14.126Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/tanjunze/ML-Note/blob/master/document/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86.md" target="_blank" rel="noopener">我的机器学习资料</a>，为了方便查询同步到笔记中。</p><h2 id="机器学习资料"><a href="#机器学习资料" class="headerlink" title="机器学习资料"></a>机器学习资料</h2><h3 id="文档资料"><a href="#文档资料" class="headerlink" title="文档资料"></a>文档资料</h3><ul><li><p><a href="https://github.com/ChristosChristofidis/awesome-deep-learning" target="_blank" rel="noopener">深度学习资料-Github</a></p></li><li><p><a href="http://neuralnetworksanddeeplearning.com/" target="_blank" rel="noopener">神经网络和深度学习•Michael Nielsen</a></p></li><li><p><a href="https://www.gitbook.com/book/hit-scir/neural-networks-and-deep-learning-zh_cn/details" target="_blank" rel="noopener">神经网络和深度学习•Michael Nielsen（翻译）</a></p><a id="more"></a></li><li><p><a href="http://www.deeplearningbook.org/" target="_blank" rel="noopener">深度学习•Bengio</a></p></li><li><p><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">深度学习•Bengio（翻译）</a></p></li><li><p><a href="https://tensorflow.google.cn/" target="_blank" rel="noopener">Tensorflow官网-国内</a></p></li><li><p><a href="https://www.tensorflowers.cn/" target="_blank" rel="noopener">Tensorflow社区-国内</a></p></li><li><p><a href="https://devopen.club/ai/" target="_blank" rel="noopener">深度学习资料整理1-国内</a></p></li><li><p><a href="https://github.com/floodsung/Deep-Learning-Papers-Reading-Roadmap" target="_blank" rel="noopener">深度学习路线图</a></p></li><li><p><a href="http://colah.github.io/" target="_blank" rel="noopener">深度学习博文</a></p></li><li><p><a href="https://deeplearning4j.org/cn/" target="_blank" rel="noopener">深度学习Java框架</a></p></li></ul><h3 id="在线教育"><a href="#在线教育" class="headerlink" title="在线教育"></a>在线教育</h3><ul><li><p><a href="https://cn.udacity.com/course/deep-learning--ud730" target="_blank" rel="noopener">Google深度学习-Udacity课程</a></p></li><li><p><a href="https://developers.google.cn/machine-learning/crash-course/" target="_blank" rel="noopener">Google机器学习速成课程</a></p></li><li><p><a href="http://ufldl.stanford.edu/wiki/index.php/UFLDL%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">深度学习-Stanford-UFLDL</a></p></li><li><p><a href="http://deeplearning.stanford.edu/tutorial/" target="_blank" rel="noopener">深度学习-Stanford-Tutorial</a></p></li><li><p><a href="https://www.icourse163.org/learn/PKU-1002536002?tid=1002700003" target="_blank" rel="noopener">人工智能实践：Tensorflow笔记-慕课网</a></p></li><li><p><a href="https://morvanzhou.github.io/" target="_blank" rel="noopener">莫烦Python</a></p></li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><p>python</p></li><li><p>jupyter notebook</p></li></ul><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><ul><li><p><a href="https://tensorflow.google.cn/" target="_blank" rel="noopener">Tensorflow</a></p></li><li><p><a href="http://wiki.jikexueyuan.com/project/tensorflow-zh/" target="_blank" rel="noopener">Tensorflow（极客学院-翻译）</a></p></li><li><p><a href="http://tensorlayercn.readthedocs.io/zh/latest/" target="_blank" rel="noopener">TensorLayer-中文</a></p></li><li><p><a href="http://tensorlayer.readthedocs.io/en/latest/" target="_blank" rel="noopener">TensorLayer</a></p></li><li><p><a href="https://github.com/scikit-learn/scikit-learn" target="_blank" rel="noopener">scikit-learn</a></p></li><li><p><a href="http://sklearn.apachecn.org" target="_blank" rel="noopener">scikit-learn 翻译</a></p></li><li><p><a href="http://caffe.berkeleyvision.org/" target="_blank" rel="noopener">caffe</a> 或 <a href="https://caffe2.ai/" target="_blank" rel="noopener">caffe2</a></p></li><li><p><a href="https://keras.io/" target="_blank" rel="noopener">Keras</a></p></li><li><p><a href="https://keras-cn.readthedocs.io/en/latest/" target="_blank" rel="noopener">keras 翻译</a></p></li><li><p><a href="http://deeplearning.net/software/theano/" target="_blank" rel="noopener">theano</a></p></li><li><p>…</p></li></ul><h2 id="其他文档"><a href="#其他文档" class="headerlink" title="其他文档"></a>其他文档</h2><ul><li><p><a href="https://deepmind.com/" target="_blank" rel="noopener">Deepmind</a></p></li><li><p><a href="http://cs231n.github.io/neural-networks-3/" target="_blank" rel="noopener">积卷神经网络-斯坦福</a></p></li><li><p><a href="https://github.com/llSourcell" target="_blank" rel="noopener">Siraj Raval-Gitub-Youtube</a></p></li><li><p><a href="https://cs231n.github.io/convolutional-networks/" target="_blank" rel="noopener">CS231n课程-积卷网络</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/22038289?refer=intelligentunit" target="_blank" rel="noopener">CS231n课程-积卷网络-中文翻译</a></p><h2 id="深度学习-开源项目"><a href="#深度学习-开源项目" class="headerlink" title="深度学习-开源项目"></a>深度学习-开源项目</h2></li></ul><ul><li><p><a href="https://github.com/CSTR-Edinburgh/merlin" target="_blank" rel="noopener">音频合成-Merlin</a></p></li><li><p><a href="https://github.com/ibab/tensorflow-wavenet" target="_blank" rel="noopener">音频合成-Wavenet</a></p></li><li><p><a href="https://github.com/udacity/deep-learning" target="_blank" rel="noopener">深度学习-Udacity-Code</a></p></li><li><p><a href="https://github.com/upul/Behavioral-Cloning" target="_blank" rel="noopener">无人驾驶-BehavioralCloning)</a></p></li><li><p><a href="https://github.com/udacity/self-driving-car-sim" target="_blank" rel="noopener">无人驾驶-udacity-sim</a></p></li><li><p><a href="https://blog.csdn.net/pengdali/article/details/79185757" target="_blank" rel="noopener">无人驾驶-CSDN博文</a></p></li></ul><h2 id="机器学习数据集"><a href="#机器学习数据集" class="headerlink" title="机器学习数据集"></a>机器学习数据集</h2><ul><li><a href="https://www.zhihu.com/question/63383992" target="_blank" rel="noopener">机器学习数据集1-知乎提问</a></li><li><a href="https://zhuanlan.zhihu.com/p/25138563" target="_blank" rel="noopener">机器学习数据集2-知乎博文</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/tanjunze/ML-Note/blob/master/document/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的机器学习资料&lt;/a&gt;，为了方便查询同步到笔记中。&lt;/p&gt;
&lt;h2 id=&quot;机器学习资料&quot;&gt;&lt;a href=&quot;#机器学习资料&quot; class=&quot;headerlink&quot; title=&quot;机器学习资料&quot;&gt;&lt;/a&gt;机器学习资料&lt;/h2&gt;&lt;h3 id=&quot;文档资料&quot;&gt;&lt;a href=&quot;#文档资料&quot; class=&quot;headerlink&quot; title=&quot;文档资料&quot;&gt;&lt;/a&gt;文档资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ChristosChristofidis/awesome-deep-learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深度学习资料-Github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://neuralnetworksanddeeplearning.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;神经网络和深度学习•Michael Nielsen&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.gitbook.com/book/hit-scir/neural-networks-and-deep-learning-zh_cn/details&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;神经网络和深度学习•Michael Nielsen（翻译）&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="资料" scheme="https://tanjunze.github.io/categories/%E8%B5%84%E6%96%99/"/>
    
    
      <category term="机器学习" scheme="https://tanjunze.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="TensorFlow" scheme="https://tanjunze.github.io/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Dart 之旅</title>
    <link href="https://tanjunze.github.io/2018/03/22/Dart%E4%B9%8B%E6%97%85/"/>
    <id>https://tanjunze.github.io/2018/03/22/Dart之旅/</id>
    <published>2018-03-21T20:10:13.000Z</published>
    <updated>2019-02-26T07:18:18.066Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://dartpad.dartlang.org/" target="_blank" rel="noopener">dartpad</a></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>所有的变量引用都是对象，每个对象都是一个类的实例。在Dart 中甚至 <strong>数字（numbers）</strong>、<strong>方法（functions）</strong>和<strong>null</strong>都是对象。所有对象都继承<strong><a href="https://api.dartlang.org/stable/dart-core/Object-class.html" target="_blank" rel="noopener">Object</a></strong>类。</li><li>尽管Dart 是强类型语言，但是<strong>类型声明</strong>是可选的，因为Dart可以推断类型。如果要明确说明不需要任何类型， 则<a href="https://www.dartlang.org/guides/language/effective-dart/design#do-annotate-with-object-instead-of-dynamic-to-indicate-any-object-is-allowed" target="_blank" rel="noopener">使用特殊类型<code>dynamic</code></a>。</li><li>Dart 支持泛型，例如<strong>List<int></int></strong> 或<strong>List<dynamic></dynamic></strong>。</li><li>Dart 支持顶级方法（如<code>main()</code>），静态方法，实例方法和方法内方法（嵌套函数和本地函数）。</li><li>Dart 支持顶级变量，以及类中定义变量（静态变量和实例变量）。实例变量有时称为字段和属性。</li><li>与<strong>Java</strong>不同的是，Dart 中没有<code>public</code>,<code>private</code>,<code>protected</code>关键字，如果标识符已（<code>_</code>）开头，则其是私有的。</li><li><em>标识符</em>可以以字母或下划线（_）开头，后跟这些字符加数字的任意组合。</li><li>Dart有两个<em>表达式</em>（具有运行时值）和 <em>语句</em>（不具有）。例如，<a href="https://www.dartlang.org/guides/language/language-tour#conditional-expressions" target="_blank" rel="noopener">条件表达式</a> <code>condition ? expr1 : expr2</code>的值为<code>expr1</code>或<code>expr2</code>。将其与<a href="https://www.dartlang.org/guides/language/language-tour#if-and-else" target="_blank" rel="noopener">if-else语句</a>进行比较，该<a href="https://www.dartlang.org/guides/language/language-tour#if-and-else" target="_blank" rel="noopener">语句</a>没有任何值。语句通常包含一个或多个表达式，但表达式不能直接包含语句。</li><li>Dart工具可以报告两种问题：<em>警告</em>和<em>错误</em>。警告只是表明您的代码可能无法正常工作，但它们不会阻止您的程序执行。错误可以是编译时或运行时。编译时错误会阻止代码执行; 运行时错误导致 代码执行时引发<a href="https://www.dartlang.org/guides/language/language-tour#exceptions" target="_blank" rel="noopener">异常</a>。</li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name=<span class="string">'Bob'</span>;</span><br><span class="line"><span class="keyword">dynamic</span> name = <span class="string">'Bob'</span> ;</span><br></pre></td></tr></table></figure><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>未初始化的变量默认为<strong>null</strong>。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> lineCount ; <span class="keyword">assert</span> （lineCount == <span class="keyword">null</span> ）;</span><br></pre></td></tr></table></figure><h3 id="final-和-const"><a href="#final-和-const" class="headerlink" title="final 和 const"></a>final 和 const</h3><p>如果不打算修改一个变量，使用<code>final</code>或<code>const</code>,final 修饰的变量只能赋值一次；一个const变量是编译时常量。（const变量同时也是final变量。）顶级的final 变量或类中的final变量在<strong>第一次使用时初始化</strong>。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> name = <span class="string">'Bob'</span>; </span><br><span class="line"><span class="keyword">final</span> <span class="built_in">String</span> nickname = <span class="string">'Bobby'</span>;</span><br><span class="line"><span class="keyword">const</span> bar = <span class="number">1000000</span>；</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> atm = <span class="number">1.01325</span> * bar;</span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">const</span> [];</span><br><span class="line"><span class="keyword">final</span> bar = <span class="keyword">const</span> [];</span><br><span class="line"><span class="keyword">const</span> baz = []; <span class="comment">// 等价于`const []`</span></span><br><span class="line"></span><br><span class="line">foo = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]; <span class="comment">//  const []</span></span><br><span class="line">baz = [<span class="number">42</span>];  <span class="comment">// 错误 不能赋值</span></span><br></pre></td></tr></table></figure><h2 id="内置类型"><a href="#内置类型" class="headerlink" title="内置类型"></a>内置类型</h2><h3 id="number"><a href="#number" class="headerlink" title="number"></a>number</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// int 类型</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">1</span> ;<span class="keyword">var</span> hex = <span class="number">0xDEADBEEF</span> ; </span><br><span class="line"><span class="comment">// double 类型</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="number">1.1</span> ; <span class="keyword">var</span> exponents = <span class="number">1.42e5</span> ; </span><br><span class="line"><span class="built_in">double</span> z = <span class="number">1</span> ; <span class="comment">//相当于double z = 1.0。  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型转换</span></span><br><span class="line"><span class="comment">// String -&gt; int</span></span><br><span class="line"><span class="keyword">var</span> one = <span class="built_in">int</span>.parse(<span class="string">'1'</span>);</span><br><span class="line"><span class="keyword">assert</span>(one == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// String -&gt; double</span></span><br><span class="line"><span class="keyword">var</span> onePointOne = <span class="built_in">double</span>.parse(<span class="string">'1.1'</span>);</span><br><span class="line"><span class="keyword">assert</span>(onePointOne == <span class="number">1.1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// int -&gt; String</span></span><br><span class="line"><span class="built_in">String</span> oneAsString = <span class="number">1.</span>toString();</span><br><span class="line"><span class="keyword">assert</span>(oneAsString == <span class="string">'1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// double -&gt; String</span></span><br><span class="line"><span class="built_in">String</span> piAsString = <span class="number">3.14159</span>.toStringAsFixed(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">assert</span>(piAsString == <span class="string">'3.14'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>((<span class="number">3</span> &lt;&lt; <span class="number">1</span>) == <span class="number">6</span>); <span class="comment">// 0011 &lt;&lt; 1 == 0110</span></span><br><span class="line"><span class="keyword">assert</span>((<span class="number">3</span> &gt;&gt; <span class="number">1</span>) == <span class="number">1</span>); <span class="comment">// 0011 &gt;&gt; 1 == 0001</span></span><br><span class="line"><span class="keyword">assert</span>((<span class="number">3</span> | <span class="number">4</span>) == <span class="number">7</span>); <span class="comment">// 0011 | 0100 == 0111</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> msPerSecond = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> secondsUntilRetry = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> msUntilRetry = secondsUntilRetry * msPerSecond;</span><br></pre></td></tr></table></figure><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>Dart String 是UTF-16编码，可以使用<code>&#39;</code>或<code>&quot;</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s1 = <span class="string">'Single quotes work well for string literals.'</span>;</span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">"Double quotes work just as well."</span>;</span><br><span class="line"><span class="keyword">var</span> s3 = <span class="string">'It\'s easy to escape the string delimiter.'</span>;</span><br><span class="line"><span class="keyword">var</span> s4 = <span class="string">"It's even easier to use the other delimiter."</span>;</span><br></pre></td></tr></table></figure><p>字符串拼接</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'string interpolation'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(<span class="string">'Dart has $s, which is very handy.'</span> ==</span><br><span class="line">    <span class="string">'Dart has string interpolation, '</span> +</span><br><span class="line">        <span class="string">'which is very handy.'</span>); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">assert</span>(<span class="string">'That deserves all caps. '</span> +</span><br><span class="line">        <span class="string">'<span class="subst">$&#123;s.toUpperCase()&#125;</span> is very handy!'</span> ==</span><br><span class="line">    <span class="string">'That deserves all caps. '</span> +</span><br><span class="line">        <span class="string">'STRING INTERPOLATION is very handy!'</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="string">'String '</span></span><br><span class="line">    <span class="string">'concatenation'</span></span><br><span class="line">    <span class="string">" works even over line breaks."</span>;</span><br><span class="line"><span class="keyword">assert</span>(s1 ==</span><br><span class="line">    <span class="string">'String concatenation works even over '</span></span><br><span class="line">    <span class="string">'line breaks.'</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">'The + operator '</span> + <span class="string">'works, as well.'</span>;</span><br><span class="line"><span class="keyword">assert</span>(s2 == <span class="string">'The + operator works, as well.'</span>); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s = <span class="string">r'In a raw string, not even \n gets special treatment.'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// These work in a const string.</span></span><br><span class="line"><span class="keyword">const</span> aConstNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> aConstBool = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">const</span> aConstString = <span class="string">'a constant string'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// These do NOT work in a const string.</span></span><br><span class="line"><span class="keyword">var</span> aNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> aBool = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">var</span> aString = <span class="string">'a string'</span>;</span><br><span class="line"><span class="keyword">const</span> aConstList = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> validConstString = <span class="string">'$aConstNum $aConstBool $aConstString'</span>;</span><br><span class="line"><span class="comment">// const invalidConstString = '$aNum $aBool $aString $aConstList';</span></span><br></pre></td></tr></table></figure><h3 id="Booleans"><a href="#Booleans" class="headerlink" title="Booleans"></a>Booleans</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Check for an empty string.</span></span><br><span class="line"><span class="keyword">var</span> fullName = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">assert</span>(fullName.isEmpty);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check for zero.</span></span><br><span class="line"><span class="keyword">var</span> hitPoints = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">assert</span>(hitPoints &lt;= <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check for null.</span></span><br><span class="line"><span class="keyword">var</span> unicorn;</span><br><span class="line"><span class="keyword">assert</span>(unicorn == <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check for NaN.</span></span><br><span class="line"><span class="keyword">var</span> iMeantToDoThis = <span class="number">0</span> / <span class="number">0</span>;</span><br><span class="line"><span class="keyword">assert</span>(iMeantToDoThis.isNaN);</span><br></pre></td></tr></table></figure><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">assert</span>(list.length == <span class="number">3</span>);</span><br><span class="line"><span class="keyword">assert</span>(list[<span class="number">1</span>] == <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">list[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">assert</span>(list[<span class="number">1</span>] == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> constantList = <span class="keyword">const</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">// constantList[1] = 1; // Uncommenting this causes an error.</span></span><br></pre></td></tr></table></figure><h3 id="Maps"><a href="#Maps" class="headerlink" title="Maps"></a>Maps</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gifts = &#123;</span><br><span class="line">  <span class="comment">// Key:    Value</span></span><br><span class="line">  <span class="string">'first'</span>: <span class="string">'partridge'</span>,</span><br><span class="line">  <span class="string">'second'</span>: <span class="string">'turtledoves'</span>,</span><br><span class="line">  <span class="string">'fifth'</span>: <span class="string">'golden rings'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nobleGases = &#123;</span><br><span class="line">  <span class="number">2</span>: <span class="string">'helium'</span>,</span><br><span class="line">  <span class="number">10</span>: <span class="string">'neon'</span>,</span><br><span class="line">  <span class="number">18</span>: <span class="string">'argon'</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gifts = <span class="built_in">Map</span>();</span><br><span class="line">gifts[<span class="string">'first'</span>] = <span class="string">'partridge'</span>;</span><br><span class="line">gifts[<span class="string">'second'</span>] = <span class="string">'turtledoves'</span>;</span><br><span class="line">gifts[<span class="string">'fifth'</span>] = <span class="string">'golden rings'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nobleGases = <span class="built_in">Map</span>();</span><br><span class="line">nobleGases[<span class="number">2</span>] = <span class="string">'helium'</span>;</span><br><span class="line">nobleGases[<span class="number">10</span>] = <span class="string">'neon'</span>;</span><br><span class="line">nobleGases[<span class="number">18</span>] = <span class="string">'argon'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gifts = &#123;<span class="string">'first'</span>: <span class="string">'partridge'</span>&#125;;</span><br><span class="line">gifts[<span class="string">'fourth'</span>] = <span class="string">'calling birds'</span>; <span class="comment">// Add a key-value pair</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gifts = &#123;<span class="string">'first'</span>: <span class="string">'partridge'</span>&#125;;</span><br><span class="line"><span class="keyword">assert</span>(gifts[<span class="string">'first'</span>] == <span class="string">'partridge'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gifts = &#123;<span class="string">'first'</span>: <span class="string">'partridge'</span>&#125;;</span><br><span class="line"><span class="keyword">assert</span>(gifts[<span class="string">'fifth'</span>] == <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gifts = &#123;<span class="string">'first'</span>: <span class="string">'partridge'</span>&#125;;</span><br><span class="line">gifts[<span class="string">'fourth'</span>] = <span class="string">'calling birds'</span>;</span><br><span class="line"><span class="keyword">assert</span>(gifts.length == <span class="number">2</span>);<span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> constantMap = <span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="number">2</span>: <span class="string">'helium'</span>,</span><br><span class="line">  <span class="number">10</span>: <span class="string">'neon'</span>,</span><br><span class="line">  <span class="number">18</span>: <span class="string">'argon'</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// constantMap[2] = 'Helium'; // Uncommenting this causes an error.</span></span><br></pre></td></tr></table></figure><h3 id="Runes"><a href="#Runes" class="headerlink" title="Runes"></a>Runes</h3><p>表达Unicode代码的常用方法是 <code>\uXXXX</code>，其中XXXX是4位十六进制值。例如，心脏（♥）是<code>\u2665</code>。要是<strong>多于或少于4个十六进制数字</strong>，将<strong>值放在大括号</strong>中。例如，笑表情符号（😆）是<code>\u{1f600}</code>。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">var</span> clapping = <span class="string">'\u&#123;1f44f&#125;'</span>;</span><br><span class="line">  <span class="built_in">print</span>(clapping);</span><br><span class="line">  <span class="built_in">print</span>(clapping.codeUnits);</span><br><span class="line">  <span class="built_in">print</span>(clapping.runes.toList());</span><br><span class="line"> <span class="comment">// 👏</span></span><br><span class="line"> <span class="comment">//[55357, 56399]</span></span><br><span class="line"> <span class="comment">//[128079]</span></span><br><span class="line"></span><br><span class="line">  Runes input = <span class="keyword">new</span> Runes(</span><br><span class="line">      <span class="string">'\u2665  \u&#123;1f605&#125;  \u&#123;1f60e&#125;  \u&#123;1f47b&#125;  \u&#123;1f596&#125;  \u&#123;1f44d&#125;'</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="keyword">new</span> <span class="built_in">String</span>.fromCharCodes(input));</span><br><span class="line">  <span class="comment">// ♥  😅  😎  👻  🖖  👍</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isNoble(<span class="built_in">int</span> atomicNumber) &#123;</span><br><span class="line">  <span class="keyword">return</span> _nobleGases[atomicNumber] != <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bool</span> isNoble(<span class="built_in">int</span> atomicNumber) =&gt; _nobleGases[atomicNumber] != <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h3 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h3><p>可选参数可以是命名参数或者基于位置的参数，但是这两种参数不能同时当做可选参数。</p><h4 id="Optional-named-parameters（可选命名参数）"><a href="#Optional-named-parameters（可选命名参数）" class="headerlink" title="Optional named parameters（可选命名参数）"></a>Optional named parameters（可选命名参数）</h4><p>调用函数时，可以使用指定命名参数 。例如：<code>*paramName*: *value*</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enableFlags （bold ：<span class="keyword">true</span> ，hidden ：<span class="keyword">false</span> ）;</span><br></pre></td></tr></table></figure><p>定义函数时，用于 <code>{param1, param2, …}</code>指定命名参数。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> enableFlags(&#123;<span class="built_in">bool</span> bold, <span class="built_in">bool</span> hidden&#125;) &#123;...&#125;</span><br></pre></td></tr></table></figure><h4 id="Optional-positional-parameters（可选位置参数）"><a href="#Optional-positional-parameters（可选位置参数）" class="headerlink" title="Optional positional parameters（可选位置参数）"></a>Optional positional parameters（可选位置参数）</h4><p>把一些方法的参数放到 <code>[]</code> 中就变成可选 位置参数了：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> say(<span class="built_in">String</span> from, <span class="built_in">String</span> msg, [<span class="built_in">String</span> device]) &#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">'$from says $msg'</span>;</span><br><span class="line">  <span class="keyword">if</span> (device != <span class="keyword">null</span>) &#123;</span><br><span class="line">    result = <span class="string">'$result with a $device'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(say(<span class="string">'Bob'</span>, <span class="string">'Howdy'</span>) == <span class="string">'Bob says Howdy'</span>); <span class="comment">//true</span></span><br><span class="line"><span class="keyword">assert</span>(say(<span class="string">'Bob'</span>, <span class="string">'Howdy'</span>, <span class="string">'smoke signal'</span>) ==</span><br><span class="line">    <span class="string">'Bob says Howdy with a smoke signal'</span>);<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="Default-parameter-values（默认参数值）"><a href="#Default-parameter-values（默认参数值）" class="headerlink" title="Default parameter values（默认参数值）"></a>Default parameter values（默认参数值）</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/// Sets </span>the<span class="markdown"> [bold] and [hidden] flags ...</span></span></span><br><span class="line"><span class="keyword">void</span> enableFlags(&#123;<span class="built_in">bool</span> bold = <span class="keyword">false</span>, <span class="built_in">bool</span> hidden = <span class="keyword">false</span>&#125;) &#123;...&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bold will be true; hidden will be false.</span></span><br><span class="line">enableFlags(bold: <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> say(<span class="built_in">String</span> from, <span class="built_in">String</span> msg,</span><br><span class="line">    [<span class="built_in">String</span> device = <span class="string">'carrier pigeon'</span>, <span class="built_in">String</span> mood]) &#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">'$from says $msg'</span>;</span><br><span class="line">  <span class="keyword">if</span> (device != <span class="keyword">null</span>) &#123;</span><br><span class="line">    result = <span class="string">'$result with a $device'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (mood != <span class="keyword">null</span>) &#123;</span><br><span class="line">    result = <span class="string">'$result (in a $mood mood)'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(say(<span class="string">'Bob'</span>, <span class="string">'Howdy'</span>) ==</span><br><span class="line">    <span class="string">'Bob says Howdy with a carrier pigeon'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> doStuff(</span><br><span class="line">    &#123;<span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list = <span class="keyword">const</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; gifts = <span class="keyword">const</span> &#123;</span><br><span class="line">      <span class="string">'first'</span>: <span class="string">'paper'</span>,</span><br><span class="line">      <span class="string">'second'</span>: <span class="string">'cotton'</span>,</span><br><span class="line">      <span class="string">'third'</span>: <span class="string">'leather'</span></span><br><span class="line">    &#125;&#125;) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'list:  $list'</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">'gifts: $gifts'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://dartpad.dartlang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dartpad&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;特性&quot;&gt;&lt;a href=&quot;#特性&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="Dart" scheme="https://tanjunze.github.io/categories/Dart/"/>
    
    
      <category term="Dart" scheme="https://tanjunze.github.io/tags/Dart/"/>
    
  </entry>
  
  <entry>
    <title>Android AIDL 使用</title>
    <link href="https://tanjunze.github.io/2018/02/26/Android%20AIDL%20%E4%B8%80%20%20%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%20/"/>
    <id>https://tanjunze.github.io/2018/02/26/Android AIDL 一  基本使用 /</id>
    <published>2018-02-25T21:13:43.000Z</published>
    <updated>2019-02-26T07:22:00.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-AIDL"><a href="#Android-AIDL" class="headerlink" title="Android AIDL"></a>Android AIDL</h1><p><code>AIDL：Android Interface Definition Language</code> 。用于<code>IPC （Inter-Process Communication，进程间通信）</code>，如 多应用间的通信，应用中存在多进程间的通信等场景。</p><blockquote><p>只有允许不同应用的客户端用 IPC 方式访问服务，并且想要在服务中处理多线程时，才有必要使用 AIDL。 如果您不需要执行跨越不同应用的并发 IPC，就应该通过<a href="https://developer.android.com/guide/components/bound-services.html#Binder" target="_blank" rel="noopener">实现一个 Binder</a> 创建接口；或者，如果您想执行 IPC，但根本不需要处理多线程，则<a href="https://developer.android.com/guide/components/bound-services.html#Messenger" target="_blank" rel="noopener">使用 Messenger 类</a>来实现接口</p></blockquote><h2 id="一、定义AIDL接口"><a href="#一、定义AIDL接口" class="headerlink" title="一、定义AIDL接口"></a>一、定义AIDL接口</h2><h3 id="1、创建-aidl-文件"><a href="#1、创建-aidl-文件" class="headerlink" title="1、创建 .aidl 文件"></a>1、创建 .aidl 文件</h3><p>在<strong>src</strong> 文件夹内创建<code>IRemoteService.aidl</code> 文件，如下。编译工程，此时会在创建相同名称的 <code>IRemoteService.java</code>文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IRemoteService.aidl</span></span><br><span class="line"><span class="keyword">package</span> com.example.android;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Declare any non-default types here with import statements</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Example service interface */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IRemoteService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** Request the process ID of this service, to do evil things with it. */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getPid</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Demonstrates some basic types that you can use as parameters</span></span><br><span class="line"><span class="comment">     * and return values in AIDL.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">basicTypes</span><span class="params">(<span class="keyword">int</span> anInt, <span class="keyword">long</span> aLong, <span class="keyword">boolean</span> aBoolean, <span class="keyword">float</span> aFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">double</span> aDouble, String aString)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、实现-aidl生成的-java接口"><a href="#2、实现-aidl生成的-java接口" class="headerlink" title="2、实现.aidl生成的.java接口"></a>2、实现.aidl生成的.java接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> IRemoteService.Stub mBinder = <span class="keyword">new</span> IRemoteService.Stub() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPid</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Process.myPid();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">basicTypes</span><span class="params">(<span class="keyword">int</span> anInt, <span class="keyword">long</span> aLong, <span class="keyword">boolean</span> aBoolean,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">float</span> aFloat, <span class="keyword">double</span> aDouble, String aString)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Does nothing</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3、公开接口"><a href="#3、公开接口" class="headerlink" title="3、公开接口"></a>3、公开接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Return the interface</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IRemoteService.Stub mBinder = <span class="keyword">new</span> IRemoteService.Stub() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPid</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Process.myPid();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">basicTypes</span><span class="params">(<span class="keyword">int</span> anInt, <span class="keyword">long</span> aLong, <span class="keyword">boolean</span> aBoolean,</span></span></span><br><span class="line"><span class="function"><span class="params">            <span class="keyword">float</span> aFloat, <span class="keyword">double</span> aDouble, String aString)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Does nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、通过IPC-传递对象"><a href="#二、通过IPC-传递对象" class="headerlink" title="二、通过IPC 传递对象"></a>二、通过IPC 传递对象</h2><p>IPC 中传递的对象需要实现 <code>Parcelable</code> 接口 ，例如  <code>Rect.aidl</code> 文件可创建一个可打包的 <code>Rect</code> 类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> android.graphics;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Declare Rect so AIDL can find it and knows that it implements</span></span><br><span class="line"><span class="comment">// the parcelable protocol.</span></span><br><span class="line">parcelable Rect;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcelable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Rect</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> left;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> top;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> right;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> bottom;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Rect&gt; CREATOR = <span class="keyword">new</span></span><br><span class="line">Parcelable.Creator&lt;Rect&gt;() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Rect <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Rect(in);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Rect[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Rect[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Rect</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">        readFromParcel(in);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel out)</span> </span>&#123;</span><br><span class="line">        out.writeInt(left);</span><br><span class="line">        out.writeInt(top);</span><br><span class="line">        out.writeInt(right);</span><br><span class="line">        out.writeInt(bottom);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">        left = in.readInt();</span><br><span class="line">        top = in.readInt();</span><br><span class="line">        right = in.readInt();</span><br><span class="line">        bottom = in.readInt();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、-调用-IPC-方法"><a href="#三、-调用-IPC-方法" class="headerlink" title="三、 调用 IPC 方法"></a>三、 调用 IPC 方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Binding</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** The primary interface we will be calling on the service. */</span></span><br><span class="line">    IRemoteService mService = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">/** Another interface we use on the service. */</span></span><br><span class="line">    ISecondary mSecondaryService = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    Button mKillButton;</span><br><span class="line">    TextView mCallbackText;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIsBound;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Standard initialization of this activity.  Set up the UI, then wait</span></span><br><span class="line"><span class="comment">     * for the user to poke it before doing anything.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.remote_service_binding);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Watch for button clicks.</span></span><br><span class="line">        Button button = (Button)findViewById(R.id.bind);</span><br><span class="line">        button.setOnClickListener(mBindListener);</span><br><span class="line">        button = (Button)findViewById(R.id.unbind);</span><br><span class="line">        button.setOnClickListener(mUnbindListener);</span><br><span class="line">        mKillButton = (Button)findViewById(R.id.kill);</span><br><span class="line">        mKillButton.setOnClickListener(mKillListener);</span><br><span class="line">        mKillButton.setEnabled(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        mCallbackText = (TextView)findViewById(R.id.callback);</span><br><span class="line">        mCallbackText.setText(<span class="string">"Not attached."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Class for interacting with the main interface of the service.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection mConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName className,</span></span></span><br><span class="line"><span class="function"><span class="params">                IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// This is called when the connection with the service has been</span></span><br><span class="line">            <span class="comment">// established, giving us the service object we can use to</span></span><br><span class="line">            <span class="comment">// interact with the service.  We are communicating with our</span></span><br><span class="line">            <span class="comment">// service through an IDL interface, so get a client-side</span></span><br><span class="line">            <span class="comment">// representation of that from the raw service object.</span></span><br><span class="line">            mService = IRemoteService.Stub.asInterface(service);</span><br><span class="line">            mKillButton.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">            mCallbackText.setText(<span class="string">"Attached."</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// We want to monitor the service for as long as we are</span></span><br><span class="line">            <span class="comment">// connected to it.</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mService.registerCallback(mCallback);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                <span class="comment">// In this case the service has crashed before we could even</span></span><br><span class="line">                <span class="comment">// do anything with it; we can count on soon being</span></span><br><span class="line">                <span class="comment">// disconnected (and then reconnected if it can be restarted)</span></span><br><span class="line">                <span class="comment">// so there is no need to do anything here.</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// As part of the sample, tell the user what happened.</span></span><br><span class="line">            Toast.makeText(Binding.<span class="keyword">this</span>, R.string.remote_service_connected,</span><br><span class="line">                    Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName className)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// This is called when the connection with the service has been</span></span><br><span class="line">            <span class="comment">// unexpectedly disconnected -- that is, its process crashed.</span></span><br><span class="line">            mService = <span class="keyword">null</span>;</span><br><span class="line">            mKillButton.setEnabled(<span class="keyword">false</span>);</span><br><span class="line">            mCallbackText.setText(<span class="string">"Disconnected."</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// As part of the sample, tell the user what happened.</span></span><br><span class="line">            Toast.makeText(Binding.<span class="keyword">this</span>, R.string.remote_service_disconnected,</span><br><span class="line">                    Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Class for interacting with the secondary interface of the service.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection mSecondaryConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName className,</span></span></span><br><span class="line"><span class="function"><span class="params">                IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Connecting to a secondary interface is the same as any</span></span><br><span class="line">            <span class="comment">// other interface.</span></span><br><span class="line">            mSecondaryService = ISecondary.Stub.asInterface(service);</span><br><span class="line">            mKillButton.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName className)</span> </span>&#123;</span><br><span class="line">            mSecondaryService = <span class="keyword">null</span>;</span><br><span class="line">            mKillButton.setEnabled(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnClickListener mBindListener = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Establish a couple connections with the service, binding</span></span><br><span class="line">            <span class="comment">// by interface names.  This allows other applications to be</span></span><br><span class="line">            <span class="comment">// installed that replace the remote service by implementing</span></span><br><span class="line">            <span class="comment">// the same interface.</span></span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(Binding.<span class="keyword">this</span>, RemoteService.class);</span><br><span class="line">            intent.setAction(IRemoteService.class.getName());</span><br><span class="line">            bindService(intent, mConnection, Context.BIND_AUTO_CREATE);</span><br><span class="line">            intent.setAction(ISecondary.class.getName());</span><br><span class="line">            bindService(intent, mSecondaryConnection, Context.BIND_AUTO_CREATE);</span><br><span class="line">            mIsBound = <span class="keyword">true</span>;</span><br><span class="line">            mCallbackText.setText(<span class="string">"Binding."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnClickListener mUnbindListener = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mIsBound) &#123;</span><br><span class="line">                <span class="comment">// If we have received the service, and hence registered with</span></span><br><span class="line">                <span class="comment">// it, then now is the time to unregister.</span></span><br><span class="line">                <span class="keyword">if</span> (mService != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        mService.unregisterCallback(mCallback);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">                        <span class="comment">// There is nothing special we need to do if the service</span></span><br><span class="line">                        <span class="comment">// has crashed.</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Detach our existing connection.</span></span><br><span class="line">                unbindService(mConnection);</span><br><span class="line">                unbindService(mSecondaryConnection);</span><br><span class="line">                mKillButton.setEnabled(<span class="keyword">false</span>);</span><br><span class="line">                mIsBound = <span class="keyword">false</span>;</span><br><span class="line">                mCallbackText.setText(<span class="string">"Unbinding."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OnClickListener mKillListener = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// To kill the process hosting our service, we need to know its</span></span><br><span class="line">            <span class="comment">// PID.  Conveniently our service has a call that will return</span></span><br><span class="line">            <span class="comment">// to us that information.</span></span><br><span class="line">            <span class="keyword">if</span> (mSecondaryService != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> pid = mSecondaryService.getPid();</span><br><span class="line">                    <span class="comment">// Note that, though this API allows us to request to</span></span><br><span class="line">                    <span class="comment">// kill any process based on its PID, the kernel will</span></span><br><span class="line">                    <span class="comment">// still impose standard restrictions on which PIDs you</span></span><br><span class="line">                    <span class="comment">// are actually able to kill.  Typically this means only</span></span><br><span class="line">                    <span class="comment">// the process running your application and any additional</span></span><br><span class="line">                    <span class="comment">// processes created by that app as shown here; packages</span></span><br><span class="line">                    <span class="comment">// sharing a common UID will also be able to kill each</span></span><br><span class="line">                    <span class="comment">// other's processes.</span></span><br><span class="line">                    Process.killProcess(pid);</span><br><span class="line">                    mCallbackText.setText(<span class="string">"Killed service process."</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</span><br><span class="line">                    <span class="comment">// Recover gracefully from the process hosting the</span></span><br><span class="line">                    <span class="comment">// server dying.</span></span><br><span class="line">                    <span class="comment">// Just for purposes of the sample, put up a notification.</span></span><br><span class="line">                    Toast.makeText(Binding.<span class="keyword">this</span>,</span><br><span class="line">                            R.string.remote_call_failed,</span><br><span class="line">                            Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ----------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment">// Code showing how to deal with callbacks.</span></span><br><span class="line">    <span class="comment">// ----------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This implementation is used to receive callbacks from the remote</span></span><br><span class="line"><span class="comment">     * service.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> IRemoteServiceCallback mCallback = <span class="keyword">new</span> IRemoteServiceCallback.Stub() &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * This is called by the remote service regularly to tell us about</span></span><br><span class="line"><span class="comment">         * new values.  Note that IPC calls are dispatched through a thread</span></span><br><span class="line"><span class="comment">         * pool running in each process, so the code executing here will</span></span><br><span class="line"><span class="comment">         * NOT be running in our main thread like most other things -- so,</span></span><br><span class="line"><span class="comment">         * to update the UI, we need to use a Handler to hop over there.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueChanged</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">            mHandler.sendMessage(mHandler.obtainMessage(BUMP_MSG, value, <span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUMP_MSG = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line">        <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> BUMP_MSG:</span><br><span class="line">                    mCallbackText.setText(<span class="string">"Received from service: "</span> + msg.arg1);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">super</span>.handleMessage(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p>[1]、<a href="https://developer.android.com/guide/components/aidl.html" target="_blank" rel="noopener">Android AIDL</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-AIDL&quot;&gt;&lt;a href=&quot;#Android-AIDL&quot; class=&quot;headerlink&quot; title=&quot;Android AIDL&quot;&gt;&lt;/a&gt;Android AIDL&lt;/h1&gt;&lt;p&gt;&lt;code&gt;AIDL：Android Interface D
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android ContentProvider</title>
    <link href="https://tanjunze.github.io/2018/01/26/Android%20ContentProvider/"/>
    <id>https://tanjunze.github.io/2018/01/26/Android ContentProvider/</id>
    <published>2018-01-25T23:27:04.000Z</published>
    <updated>2019-02-26T07:21:33.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-ContentProvider"><a href="#Android-ContentProvider" class="headerlink" title="Android  ContentProvider"></a>Android  ContentProvider</h1><p>ContentProvider（内容提供者）作为Android 四大组件之一主要用于为<strong>为其他应用提供复杂的数据或文件</strong>。</p><h3 id="内容-URI"><a href="#内容-URI" class="headerlink" title="内容 URI"></a>内容 URI</h3><p>是ContentProvider 的唯一表示,app 根据您 内容uri 查询操作数据。内容uri的结构如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content://authority/tablename/id</span><br></pre></td></tr></table></figure><table><thead><tr><th>标识</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>ContentProvider 前缀标识</td></tr><tr><td>authority</td><td>授权：指定内容提供者的名称，如：com.hello.provider</td></tr><tr><td>tablename</td><td>需要访问数据的名称，一般为数据库表名 如：user</td></tr><tr><td>id</td><td>数据表下 id 表示的行,如：1</td></tr></tbody></table><p>示例：<strong>content://com.hello.provider/user/1</strong> 访问  <strong>com.hello.provider</strong>数据<strong>user</strong> 表中<strong>1</strong>表示的行。</p><p><strong>内容url 的通配符</strong></p><p>​    <strong>*</strong>：匹配由任意长度的任何有效字符组成的字符串</p><p>​    <strong>#</strong>：匹配由任意长度的数字字符组成的字符串</p><h3 id="创建内容提供者"><a href="#创建内容提供者" class="headerlink" title="创建内容提供者"></a>创建内容提供者</h3><h4 id="1、实现ContentProvider"><a href="#1、实现ContentProvider" class="headerlink" title="1、实现ContentProvider"></a>1、实现ContentProvider</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"BookProvider"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">"com.ryg.chapter_2.book.provider"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Uri BOOK_CONTENT_URI = Uri.parse(<span class="string">"content://"</span></span><br><span class="line">            + AUTHORITY + <span class="string">"/book"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Uri USER_CONTENT_URI = Uri.parse(<span class="string">"content://"</span></span><br><span class="line">            + AUTHORITY + <span class="string">"/user"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOOK_URI_CODE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> USER_URI_CODE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> UriMatcher sUriMatcher = <span class="keyword">new</span> UriMatcher(</span><br><span class="line">            UriMatcher.NO_MATCH);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        sUriMatcher.addURI(AUTHORITY, <span class="string">"book"</span>, BOOK_URI_CODE);</span><br><span class="line">        sUriMatcher.addURI(AUTHORITY, <span class="string">"user"</span>, USER_URI_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase mDb;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"onCreate, current thread:"</span></span><br><span class="line">                + Thread.currentThread().getName());</span><br><span class="line">        mContext = getContext();</span><br><span class="line">        initProviderData();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initProviderData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mDb = <span class="keyword">new</span> DbOpenHelper(mContext).getWritableDatabase();</span><br><span class="line">        mDb.execSQL(<span class="string">"delete from "</span> + DbOpenHelper.BOOK_TABLE_NAME);</span><br><span class="line">        mDb.execSQL(<span class="string">"delete from "</span> + DbOpenHelper.USER_TALBE_NAME);</span><br><span class="line">        mDb.execSQL(<span class="string">"insert into book values(3,'Android');"</span>);</span><br><span class="line">        mDb.execSQL(<span class="string">"insert into book values(4,'Ios');"</span>);</span><br><span class="line">        mDb.execSQL(<span class="string">"insert into book values(5,'Html5');"</span>);</span><br><span class="line">        mDb.execSQL(<span class="string">"insert into user values(1,'jake',1);"</span>);</span><br><span class="line">        mDb.execSQL(<span class="string">"insert into user values(2,'jasmine',0);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">            String[] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"query, current thread:"</span> + Thread.currentThread().getName());</span><br><span class="line">        String table = getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span> (table == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unsupported URI: "</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mDb.query(table, projection, selection, selectionArgs, <span class="keyword">null</span>, <span class="keyword">null</span>, sortOrder, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"getType"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"insert"</span>);</span><br><span class="line">        String table = getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span> (table == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unsupported URI: "</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">        mDb.insert(table, <span class="keyword">null</span>, values);</span><br><span class="line">        mContext.getContentResolver().notifyChange(uri, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"delete"</span>);</span><br><span class="line">        String table = getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span> (table == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unsupported URI: "</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count = mDb.delete(table, selection, selectionArgs);</span><br><span class="line">        <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            getContext().getContentResolver().notifyChange(uri, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection,</span></span></span><br><span class="line"><span class="function"><span class="params">            String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"update"</span>);</span><br><span class="line">        String table = getTableName(uri);</span><br><span class="line">        <span class="keyword">if</span> (table == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Unsupported URI: "</span> + uri);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> row = mDb.update(table, values, selection, selectionArgs);</span><br><span class="line">        <span class="keyword">if</span> (row &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            getContext().getContentResolver().notifyChange(uri, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> row;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getTableName</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        String tableName = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (sUriMatcher.match(uri)) &#123;</span><br><span class="line">        <span class="keyword">case</span> BOOK_URI_CODE:</span><br><span class="line">            tableName = DbOpenHelper.BOOK_TABLE_NAME;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> USER_URI_CODE:</span><br><span class="line">            tableName = DbOpenHelper.USER_TALBE_NAME;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> tableName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册 ContentProvider</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:name</span>=<span class="string">".provider.BookProvider"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:authorities</span>=<span class="string">"com.ryg.chapter_2.book.provider"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2、调用ContentProvider"><a href="#2、调用ContentProvider" class="headerlink" title="2、调用ContentProvider"></a>2、调用ContentProvider</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"ProviderActivity"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_provider);</span><br><span class="line">        </span><br><span class="line">        Uri bookUri = Uri.parse(<span class="string">"content://com.ryg.chapter_2.book.provider/book"</span>);</span><br><span class="line">        ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">        values.put(<span class="string">"_id"</span>, <span class="number">6</span>);</span><br><span class="line">        values.put(<span class="string">"name"</span>, <span class="string">"程序设计的艺术"</span>);</span><br><span class="line">        getContentResolver().insert(bookUri, values);</span><br><span class="line">        Cursor bookCursor = getContentResolver().query(bookUri, <span class="keyword">new</span> String[]&#123;<span class="string">"_id"</span>, <span class="string">"name"</span>&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">while</span> (bookCursor.moveToNext()) &#123;</span><br><span class="line">            Book book = <span class="keyword">new</span> Book();</span><br><span class="line">            book.bookId = bookCursor.getInt(<span class="number">0</span>);</span><br><span class="line">            book.bookName = bookCursor.getString(<span class="number">1</span>);</span><br><span class="line">            Log.d(TAG, <span class="string">"query book:"</span> + book.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        bookCursor.close();</span><br><span class="line"></span><br><span class="line">        Uri userUri = Uri.parse(<span class="string">"content://com.ryg.chapter_2.book.provider/user"</span>);</span><br><span class="line">        Cursor userCursor = getContentResolver().query(userUri, <span class="keyword">new</span> String[]&#123;<span class="string">"_id"</span>, <span class="string">"name"</span>, <span class="string">"sex"</span>&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">while</span> (userCursor.moveToNext()) &#123;</span><br><span class="line">            User user = <span class="keyword">new</span> User();</span><br><span class="line">            user.userId = userCursor.getInt(<span class="number">0</span>);</span><br><span class="line">            user.userName = userCursor.getString(<span class="number">1</span>);</span><br><span class="line">            user.isMale = userCursor.getInt(<span class="number">2</span>) == <span class="number">1</span>;</span><br><span class="line">            Log.d(TAG, <span class="string">"query user:"</span> + user.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        userCursor.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3、添加自定义权限"><a href="#3、添加自定义权限" class="headerlink" title="3、添加自定义权限"></a>3、添加自定义权限</h4><p>ContentProvider 可以自定义权限来限制 数据共享的应用，</p><p>自定义权限：<a href="https://developer.android.com/guide/topics/manifest/permission-element.html" target="_blank" rel="noopener">https://developer.android.com/guide/topics/manifest/permission-element.html</a></p><hr><p>参考：</p><p>[1]、<a href="https://developer.android.com/guide/topics/providers/content-provider-creating?hl=zh-cn" target="_blank" rel="noopener">Android  ContentProvider </a></p><p>[2]、<a href="https://developer.android.com/guide/topics/manifest/permission-element.html" target="_blank" rel="noopener">Android Permission</a></p><p>[3]、<a href="https://github.com/singwhatiwanna/android-art-res" target="_blank" rel="noopener">《Android开发艺术探索》</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-ContentProvider&quot;&gt;&lt;a href=&quot;#Android-ContentProvider&quot; class=&quot;headerlink&quot; title=&quot;Android  ContentProvider&quot;&gt;&lt;/a&gt;Android  Content
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android FragmentPageAdapter 与 FragmentStatePageAdapter</title>
    <link href="https://tanjunze.github.io/2017/12/05/FragmentPageAdapter/"/>
    <id>https://tanjunze.github.io/2017/12/05/FragmentPageAdapter/</id>
    <published>2017-12-04T22:30:59.000Z</published>
    <updated>2019-02-26T06:32:10.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FragmentPageAdapter-与-FragmentStatePageAdapter"><a href="#FragmentPageAdapter-与-FragmentStatePageAdapter" class="headerlink" title="FragmentPageAdapter 与 FragmentStatePageAdapter"></a>FragmentPageAdapter 与 FragmentStatePageAdapter</h2><p>在项目中需要动态更新Tab，于是对于选择<code>FragmentPageAdapter</code>和<code>FragmentStatePageAdapter</code>有点困惑。几经周转总算理解了，这里记录一下。当然有问题是的时候还是看官方文档比较详细。</p><h3 id="FragmentPageAdapter"><a href="#FragmentPageAdapter" class="headerlink" title="FragmentPageAdapter"></a>FragmentPageAdapter</h3><p>官网：<a href="https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html" target="_blank" rel="noopener">https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html</a></p><p>文档中描述了FragmentPageAdapter中每一个Fragment都将保存在内存，所以FragmentPagerAdapter适合那些相数量相对较少，静态的页面。对于存在多个fragment的情况，一般推荐使用FragmentStatePagerAdapter。</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FragmentPagerSupport</span> <span class="keyword">extends</span> <span class="title">FragmentActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NUM_ITEMS = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    MyAdapter mAdapter;</span><br><span class="line"></span><br><span class="line">    ViewPager mPager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.fragment_pager);</span><br><span class="line"></span><br><span class="line">        mAdapter = <span class="keyword">new</span> MyAdapter(getSupportFragmentManager());</span><br><span class="line"></span><br><span class="line">        mPager = (ViewPager)findViewById(R.id.pager);</span><br><span class="line">        mPager.setAdapter(mAdapter);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Watch for button clicks.</span></span><br><span class="line">        Button button = (Button)findViewById(R.id.goto_first);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                mPager.setCurrentItem(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        button = (Button)findViewById(R.id.goto_last);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                mPager.setCurrentItem(NUM_ITEMS-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyAdapter</span><span class="params">(FragmentManager fm)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(fm);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> NUM_ITEMS;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ArrayListFragment.newInstance(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayListFragment</span> <span class="keyword">extends</span> <span class="title">ListFragment</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> mNum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Create a new instance of CountingFragment, providing "num"</span></span><br><span class="line"><span class="comment">         * as an argument.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> ArrayListFragment <span class="title">newInstance</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">            ArrayListFragment f = <span class="keyword">new</span> ArrayListFragment();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Supply num input as an argument.</span></span><br><span class="line">            Bundle args = <span class="keyword">new</span> Bundle();</span><br><span class="line">            args.putInt(<span class="string">"num"</span>, num);</span><br><span class="line">            f.setArguments(args);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> f;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * When creating, retrieve this instance's number from its arguments.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            mNum = getArguments() != <span class="keyword">null</span> ? getArguments().getInt(<span class="string">"num"</span>) : <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * The Fragment's UI is just a simple text view showing its</span></span><br><span class="line"><span class="comment">         * instance number.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container,</span></span></span><br><span class="line"><span class="function"><span class="params">                Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">            View v = inflater.inflate(R.layout.fragment_pager_list, container, <span class="keyword">false</span>);</span><br><span class="line">            View tv = v.findViewById(R.id.text);</span><br><span class="line">            ((TextView)tv).setText(<span class="string">"Fragment #"</span> + mNum);</span><br><span class="line">            <span class="keyword">return</span> v;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityCreated</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onActivityCreated(savedInstanceState);</span><br><span class="line">            setListAdapter(<span class="keyword">new</span> ArrayAdapter&lt;String&gt;(getActivity(),</span><br><span class="line">                    android.R.layout.simple_list_item_1, Cheeses.sCheeseStrings));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onListItemClick</span><span class="params">(ListView l, View v, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">            Log.i(<span class="string">"FragmentList"</span>, <span class="string">"Item clicked: "</span> + id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>R.layout.fragment_pager</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> <span class="attr">android:padding</span>=<span class="string">"4dip"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/pager"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"0px"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">"center"</span> <span class="attr">android:measureWithLargestChild</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/goto_first"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span> <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/first"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/goto_last"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span> <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"@string/last"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>R.layout.fragment_pager_list</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@android:drawable/gallery_thumb"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@+id/text"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center_vertical|center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceMedium"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/hello_world"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- The frame layout is here since we will be showing either</span></span><br><span class="line"><span class="comment">    the empty view or the list view.  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dip"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Here is the list. Since we are using a ListActivity, we</span></span><br><span class="line"><span class="comment">             have to call it "@android:id/list" so ListActivity will</span></span><br><span class="line"><span class="comment">             find it --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/list"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:drawSelectorOnTop</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Here is the view to show if the list is emtpy --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/empty"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceMedium"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"No items."</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="FragmentStatePageAdapter"><a href="#FragmentStatePageAdapter" class="headerlink" title="FragmentStatePageAdapter"></a>FragmentStatePageAdapter</h3><p>官网：<a href="https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html" target="_blank" rel="noopener">https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html</a></p><p>FragmentStatePageAdapter 在适合像listView大量page的场景。当page不显示的时候fragment可能被销毁，此时fragment的状态会保存起来，相比<code>FragmentPageAdapter</code>占用内存较少。但是在 page 切换时fragment 再次创建会产生额外的开销。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentStatePagerAdapter</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">MyAdapter</span><span class="params">(FragmentManager fm)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">super</span>(fm);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> NUM_ITEMS;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> ArrayListFragment.newInstance(position);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;FragmentPageAdapter-与-FragmentStatePageAdapter&quot;&gt;&lt;a href=&quot;#FragmentPageAdapter-与-FragmentStatePageAdapter&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Handle 消息机制</title>
    <link href="https://tanjunze.github.io/2017/12/02/Android%20handle%20%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6/"/>
    <id>https://tanjunze.github.io/2017/12/02/Android handle 消息机制/</id>
    <published>2017-12-01T21:00:54.000Z</published>
    <updated>2019-02-26T07:20:58.317Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Handle-消息机制"><a href="#Android-Handle-消息机制" class="headerlink" title="Android Handle 消息机制"></a>Android Handle 消息机制</h1><p>handle 消息机制是Android 重要的组成部分，首先我们需要的理解的是Android为什么需要 handle 机制。开发Android的都得知道 Android有主线程之分（UI 线程），主线程中每16ms接收到Android系统的同步信号来更新UI 视图。如果在主线程中进行耗时操作会阻塞线性会造成ANR（无响应异常）。如果在子线程中进行耗时操作，当子线程任务完成时，无法直接调用主线程中UI 组件（主线程不是线程安全的，子线直接调用主线程中的UI 组件会产生不可预期的错误，如死锁等，如果给主线程加锁会造成UI 组件的复杂性并且阻塞了部分操作的执行）。基于以上的理由Android 设计了Handle 机制来确保当子线程执行完耗时操作时能够安全的更新主线程中的UI 视图（也可以确保不同线程之间的安全通信）。到这里我们能够理解 handle 机制 机制存在的理由了，下面我们继续组成、使用及原理。</p><p><img src="/images/handle_loop.png" alt=""></p><p>如上图，Handle 中有三个重要的组成部分：handle，Loop，MessageQueue。</p><h3 id="Handle"><a href="#Handle" class="headerlink" title="Handle"></a>Handle</h3><p>在Handle主要承担着发送<code>Message</code> 到 <code>MessageQueue</code>队列中和和接收处理 <code>Loop</code> 分发过来的 <code>Message</code>。</p><p>如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandleExample</span> </span>&#123;</span><br><span class="line">    Handler mHandler;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HANDLE_WHAT_1 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleExample</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mHandler = <span class="keyword">new</span> Handler(Looper.getMainLooper()) &#123;</span><br><span class="line">            <span class="comment">// 接收 Loop  分发的 Message</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">switch</span> (message.what) &#123;</span><br><span class="line">                    <span class="keyword">case</span> HANDLE_WHAT_1:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Message message = <span class="keyword">new</span> Message();</span><br><span class="line">        message.what = HANDLE_WHAT_1;</span><br><span class="line">        message.arg1 = <span class="number">1</span>;</span><br><span class="line">        message.arg2 = <span class="number">2</span>;</span><br><span class="line">        message.obj = <span class="string">"handle test"</span>;</span><br><span class="line">        <span class="comment">// 发送 消息</span></span><br><span class="line">        mHandler.sendMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在源代码中  handle 通过 <code>send***</code>方法调用<code>MessageQueue</code>的<code>queue.enqueueMessage</code>向 MessageQueue插入一条Message</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 源码 Handler.java</span></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">sendMessageAtFrontOfQueue</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">     MessageQueue queue = mQueue;</span><br><span class="line">     <span class="keyword">if</span> (queue == <span class="keyword">null</span>) &#123;</span><br><span class="line">         RuntimeException e = <span class="keyword">new</span> RuntimeException(</span><br><span class="line">             <span class="keyword">this</span> + <span class="string">" sendMessageAtTime() called with no mQueue"</span>);</span><br><span class="line">         Log.w(<span class="string">"Looper"</span>, e.getMessage(), e);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> enqueueMessage(queue, msg, <span class="number">0</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">enqueueMessage</span><span class="params">(MessageQueue queue, Message msg, <span class="keyword">long</span> uptimeMillis)</span> </span>&#123;</span><br><span class="line">     msg.target = <span class="keyword">this</span>;</span><br><span class="line">     <span class="keyword">if</span> (mAsynchronous) &#123;</span><br><span class="line">         msg.setAsynchronous(<span class="keyword">true</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> queue.enqueueMessage(msg, uptimeMillis);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>在Loop调用 <code>MessageQueue</code>中的 <code>getNextMessage</code> 方法 获取 <code>Message</code>的handle 引用 通过 <code>dispatchMessage</code>分发Handle 中处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 源码 </span></span><br><span class="line"><span class="keyword">while</span> (SystemClock.uptimeMillis() &lt; end) &#123;</span><br><span class="line">   <span class="keyword">boolean</span> conditionsMet = <span class="keyword">true</span>;</span><br><span class="line">    <span class="comment">// 省略部分代码</span></span><br><span class="line">   <span class="keyword">if</span> (conditionsMet) &#123;</span><br><span class="line">     QueueState queueState = queueInterrogator.determineQueueState();</span><br><span class="line">     <span class="keyword">if</span> (queueState == QueueState.EMPTY || queueState == QueueState.TASK_DUE_LONG) &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   Message message = queueInterrogator.getNextMessage();</span><br><span class="line">   message.getTarget().dispatchMessage(message);</span><br><span class="line">   recycler.recycle(message);</span><br><span class="line">   loopCount++;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="MessageQueue"><a href="#MessageQueue" class="headerlink" title="MessageQueue"></a>MessageQueue</h3><p>单链表结构，主要用于存储 Message, 插入方法<code>enqueueMessage</code>,出队方法 <code>next</code> ,</p><h3 id="Loop"><a href="#Loop" class="headerlink" title="Loop"></a>Loop</h3><p>Loop 主要是一个循环器，它不断的循环 <code>MessageQueue</code> 队列并取出  <code>Message</code> 交个 <code>Handle</code>处理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Handle-消息机制&quot;&gt;&lt;a href=&quot;#Android-Handle-消息机制&quot; class=&quot;headerlink&quot; title=&quot;Android Handle 消息机制&quot;&gt;&lt;/a&gt;Android Handle 消息机制&lt;/h1&gt;&lt;p&gt;ha
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Service 二 组件间通信</title>
    <link href="https://tanjunze.github.io/2017/11/14/Android%20Service%20%E4%BA%8C%20%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1/"/>
    <id>https://tanjunze.github.io/2017/11/14/Android Service 二 组件间通信/</id>
    <published>2017-11-13T22:35:02.000Z</published>
    <updated>2019-02-26T07:20:25.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Service-通信"><a href="#Android-Service-通信" class="headerlink" title="Android Service 通信"></a>Android Service 通信</h1><p>Android 中 Service 通信需要使用 <code>bindService</code>启动方式，但是<code>startService</code>启动方式 也可以与组件间进行通信。这里总结 Service 通信方式。</p><h2 id="startService"><a href="#startService" class="headerlink" title="startService"></a>startService</h2><h3 id="1、使用广播通信"><a href="#1、使用广播通信" class="headerlink" title="1、使用广播通信"></a>1、使用广播通信</h3><p><strong>不推荐此种方式</strong></p><p>广播发送：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.putExtra(<span class="string">"paramkey1"</span>,<span class="string">"params1"</span>);</span><br><span class="line">intent.setAction(RECEIVER_ACTION);     </span><br><span class="line">LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(intent);</span><br></pre></td></tr></table></figure><p>广播接收：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> BroadcastReceiver mReceiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">   <span class="comment">// todo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、EventBus-通信"><a href="#2、EventBus-通信" class="headerlink" title="2、EventBus 通信"></a>2、EventBus 通信</h3><p>eventbus：<a href="https://github.com/greenrobot/EventBus" target="_blank" rel="noopener">https://github.com/greenrobot/EventBus</a></p><p>发送消息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStart();</span><br><span class="line">    EventBus.getDefault().register(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStop();</span><br><span class="line">    EventBus.getDefault().unregister(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendComponentMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">  EventBus.getDefault().post(<span class="keyword">new</span> MessageEvent());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收消息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Subscribe</span>(threadMode = ThreadMode.MAIN)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessageEvent</span><span class="params">(MessageEvent event)</span> </span>&#123;</span><br><span class="line">    Toast.makeText(getActivity(), event.message, Toast.LENGTH_SHORT).show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bindService"><a href="#bindService" class="headerlink" title="bindService"></a>bindService</h2><p>只有 Activity、服务和内容提供程序可以绑定到服务 — <strong>无法</strong>从广播接收器绑定到服务。</p><h3 id="1、-IBinder-通信"><a href="#1、-IBinder-通信" class="headerlink" title="1、 IBinder 通信"></a>1、 IBinder 通信</h3><blockquote><p><strong>注：</strong>此方法只有在客户端和服务位于<strong>同一应用和进程内</strong>这一最常见的情况下方才有效。 例如，对于需要将 Activity 绑定到在后台播放音乐的自有服务的音乐应用，此方法非常有效。</p><p>之所以要求服务和客户端必须在同一应用内，是为了便于客户端转换返回的对象和正确调用其 API。服务和客户端还必须在同一进程内，因为此方法不执行任何跨进程编组。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IBinder mBinder = <span class="keyword">new</span> LocalBinder();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Random mGenerator = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</span><br><span class="line">        <span class="function">LocalService <span class="title">getService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Return this instance of LocalService so clients can call public methods</span></span><br><span class="line">            <span class="keyword">return</span> LocalService.<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** method for clients */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRandomNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mGenerator.nextInt(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BindingActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    LocalService mService;</span><br><span class="line">    <span class="keyword">boolean</span> mBound = <span class="keyword">false</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        <span class="comment">// Bind to LocalService</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LocalService.class);</span><br><span class="line">        bindService(intent, mConnection, Context.BIND_AUTO_CREATE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        <span class="comment">// Unbind from the service</span></span><br><span class="line">        <span class="keyword">if</span> (mBound) &#123;</span><br><span class="line">            unbindService(mConnection);</span><br><span class="line">            mBound = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Called when a button is clicked (the button in the layout file attaches to</span></span><br><span class="line"><span class="comment">      * this method with the android:onClick attribute) */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onButtonClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mBound) &#123;</span><br><span class="line">            <span class="comment">// Call a method from the LocalService.</span></span><br><span class="line">            <span class="comment">// However, if this call were something that might hang, then this request should</span></span><br><span class="line">            <span class="comment">// occur in a separate thread to avoid slowing down the activity performance.</span></span><br><span class="line">            <span class="keyword">int</span> num = mService.getRandomNumber();</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"number: "</span> + num, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Defines callbacks for service binding, passed to bindService() */</span></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection mConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName className,</span></span></span><br><span class="line"><span class="function"><span class="params">                IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// We've bound to LocalService, cast the IBinder and get LocalService instance</span></span><br><span class="line">            LocalBinder binder = (LocalBinder) service;</span><br><span class="line">            mService = binder.getService();</span><br><span class="line">            mBound = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName arg0)</span> </span>&#123;</span><br><span class="line">            mBound = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、Messenger-通信"><a href="#2、Messenger-通信" class="headerlink" title="2、Messenger 通信"></a>2、Messenger 通信</h3><blockquote><p><strong>相对于 AIDL</strong></p><p>当您需要执行 IPC 时，为您的接口使用 <code>Messenger</code> 要比使用 AIDL 实现它更加简单，因为 <code>Messenger</code> 会将所有服务调用排入队列，而纯粹的 AIDL 接口会同时向服务发送多个请求，服务随后必须应对多线程处理。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessengerService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** Command to the service to display a message */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_SAY_HELLO = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handler of incoming messages from clients.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IncomingHandler</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> MSG_SAY_HELLO:</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"hello!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">super</span>.handleMessage(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Target we publish for clients to send messages to IncomingHandler.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> Messenger mMessenger = <span class="keyword">new</span> Messenger(<span class="keyword">new</span> IncomingHandler());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * When binding to the service, we return an interface to our messenger</span></span><br><span class="line"><span class="comment">     * for sending messages to the service.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(getApplicationContext(), <span class="string">"binding"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="keyword">return</span> mMessenger.getBinder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActivityMessenger</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** Messenger for communicating with the service. */</span></span><br><span class="line">    Messenger mService = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** Flag indicating whether we have called bind on the service. */</span></span><br><span class="line">    <span class="keyword">boolean</span> mBound;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Class for interacting with the main interface of the service.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection mConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName className, IBinder service)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// This is called when the connection with the service has been</span></span><br><span class="line">            <span class="comment">// established, giving us the object we can use to</span></span><br><span class="line">            <span class="comment">// interact with the service.  We are communicating with the</span></span><br><span class="line">            <span class="comment">// service using a Messenger, so here we get a client-side</span></span><br><span class="line">            <span class="comment">// representation of that from the raw IBinder object.</span></span><br><span class="line">            mService = <span class="keyword">new</span> Messenger(service);</span><br><span class="line">            mBound = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName className)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// This is called when the connection with the service has been</span></span><br><span class="line">            <span class="comment">// unexpectedly disconnected -- that is, its process crashed.</span></span><br><span class="line">            mService = <span class="keyword">null</span>;</span><br><span class="line">            mBound = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!mBound) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">// Create and send a message to the service, using a supported 'what' value</span></span><br><span class="line">        Message msg = Message.obtain(<span class="keyword">null</span>, MessengerService.MSG_SAY_HELLO, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mService.send(msg);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        <span class="comment">// Bind to the service</span></span><br><span class="line">        bindService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MessengerService.class), mConnection,</span><br><span class="line">            Context.BIND_AUTO_CREATE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        <span class="comment">// Unbind from the service</span></span><br><span class="line">        <span class="keyword">if</span> (mBound) &#123;</span><br><span class="line">            unbindService(mConnection);</span><br><span class="line">            mBound = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、AIDL-通信"><a href="#3、AIDL-通信" class="headerlink" title="3、AIDL 通信"></a>3、AIDL 通信</h3><p><a href="/2018/06/18/Android%20AIDL%20%E4%B8%80%20%20%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%20/">Android AIDL 一  基本使用 </a></p><hr><p>参考：</p><p>[1]、<a href="https://developer.android.com/guide/components/bound-services.html" target="_blank" rel="noopener">android 绑定服务</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Service-通信&quot;&gt;&lt;a href=&quot;#Android-Service-通信&quot; class=&quot;headerlink&quot; title=&quot;Android Service 通信&quot;&gt;&lt;/a&gt;Android Service 通信&lt;/h1&gt;&lt;p&gt;Androi
      
    
    </summary>
    
      <category term="Android" scheme="https://tanjunze.github.io/categories/Android/"/>
    
    
      <category term="Android" scheme="https://tanjunze.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Frp内网穿透笔记</title>
    <link href="https://tanjunze.github.io/2017/11/02/Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    <id>https://tanjunze.github.io/2017/11/02/Frp内网穿透笔记/</id>
    <published>2017-11-01T23:50:34.000Z</published>
    <updated>2019-02-26T06:31:48.333Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/fatedier/frp/issues/176" target="_blank" rel="noopener">https://github.com/fatedier/frp/issues/176</a><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/fatedier/frp/issues/176&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/fatedier/frp/issues/176&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="https://tanjunze.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="其他" scheme="https://tanjunze.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
